"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var initialize_1 = require("./../controller/initialize");
var mongoose = require("mongoose");
exports.schema = new mongoose.Schema({
    key: {
        type: String,
        required: function () {
            return !this.paciente;
        }
    },
    paciente: {
        type: mongoose.Types.ObjectId,
        required: function () {
            return !this.key;
        }
    },
    fecha: {
        type: Date,
        required: true,
    },
    operacion: {
        type: String,
        required: true
    },
    usuario: mongoose.Schema.Types.Mixed,
    app: mongoose.Schema.Types.Mixed,
    organizacion: mongoose.Schema.Types.Mixed,
    data: {
        anterior: mongoose.Schema.Types.Mixed,
        valor: mongoose.Schema.Types.Mixed,
    },
    cliente: {
        ip: String,
        userAgent: {
            isMobile: Boolean,
            isDesktop: Boolean,
            isBot: Boolean,
            browser: String,
            version: String,
            os: String,
            platform: String,
            source: String
        }
    },
    servidor: {
        ip: String
    },
    error: String
});
// Indices
exports.schema.index({ key: 1, fecha: -1 });
exports.schema.index({ paciente: 1, fecha: -1 });
// Hay que diferir la inicialización del modelo está que esté lista la colección
// jgabriel | Igual esta solución no me gusta mucho :(
var _model = null;
function initModel() {
    if (!_model) {
        _model = initialize_1.Connections.main.model('logs', exports.schema, 'logs');
    }
    return _model;
}
exports.initModel = initModel;
//# sourceMappingURL=log.js.map