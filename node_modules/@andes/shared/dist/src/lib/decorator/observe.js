"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var operators_1 = require("rxjs/operators");
var rxjs_1 = require("rxjs");
function Observe(params) {
    if (params === void 0) { params = {}; }
    var initial = params.initial, exposeAs = params.exposeAs, debounce = params.debounce, distinc = params.distinc;
    return function prop(target, name) {
        var BehaviorName = name + "BS";
        var observeName = exposeAs || name + "$";
        function create() {
            target[BehaviorName] = new rxjs_1.BehaviorSubject(initial);
            target[observeName] = target[BehaviorName].asObservable();
            var pipes = [];
            if (debounce) {
                pipes.push(operators_1.debounceTime(debounce));
            }
            if (distinc) {
                var callback = typeof distinc === 'function' ? distinc : null;
                pipes.push(operators_1.distinctUntilChanged(callback));
            }
            if (pipes.length > 0) {
                target[observeName] = (_a = target[observeName]).pipe.apply(_a, pipes);
            }
            var _a;
        }
        var ngOnInit = target.constructor.prototype.ngOnInit;
        target.constructor.prototype.ngOnInit = function () {
            create();
            if (ngOnInit) {
                ngOnInit.apply(this);
            }
        };
        Object.defineProperty(target, name, {
            get: function () {
                return this[BehaviorName].getValue();
            },
            set: function (value) {
                this[BehaviorName].next(value);
            },
            enumerable: true,
            configurable: true
        });
    };
}
exports.Observe = Observe;
//# sourceMappingURL=observe.js.map