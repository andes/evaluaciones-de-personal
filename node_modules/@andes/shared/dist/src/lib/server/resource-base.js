"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Implementa las rutas b√°sicas de ResourceBase
 */
var ResourceBaseHttp = /** @class */ (function () {
    function ResourceBaseHttp(server) {
        this.server = server;
        /**
         * Muestra un cartel en caso de error
         */
        this.showError = true;
        /**
         * Permite customizar por ruta el cartel de error;
         */
        this.showErrorDetail = {};
    }
    ResourceBaseHttp.prototype.save = function (data) {
        if (!data.id) {
            return this.create(data);
        }
        else {
            return this.update(data.id, data);
        }
    };
    ResourceBaseHttp.prototype.get = function (id) {
        return this.server.get(this.url + "/" + id, { showError: this.mustShowError('get') });
    };
    ResourceBaseHttp.prototype.search = function (query) {
        if (query === void 0) { query = {}; }
        return this.server.get(this.url, { params: query, showError: this.mustShowError('search') });
    };
    ResourceBaseHttp.prototype.create = function (body) {
        return this.server.post(this.url, body, { showError: this.mustShowError('create') });
    };
    ResourceBaseHttp.prototype.update = function (id, body) {
        return this.server.patch(this.url + "/" + id, body, { showError: this.mustShowError('update') });
    };
    ResourceBaseHttp.prototype.delete = function (id) {
        return this.server.delete(this.url + "/" + id, { showError: this.mustShowError('delete') });
    };
    ResourceBaseHttp.prototype.mustShowError = function (type) {
        if (this.showErrorDetail[type] !== undefined) {
            return this.showErrorDetail[type];
        }
        return this.showError;
    };
    return ResourceBaseHttp;
}());
exports.ResourceBaseHttp = ResourceBaseHttp;
//# sourceMappingURL=resource-base.js.map