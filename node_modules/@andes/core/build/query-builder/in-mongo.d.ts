export declare function matchDate(value: string): {};
export declare function transformDate(fecha: string, start: boolean): Date;
export declare function partialString(value: string): string | {
    $regex: RegExp;
};
export declare function matchString(value: string): string;
export declare function equalMatch(value: string | boolean | number): string | number | boolean;
/**
 * Devuelve una query con elemMatch por keyName y valueName
 *
 * @param {string} value
 * @param {string} keyName
 * @param {string} valueName
 */
export declare function queryMatch(value: string, keyName: string, valueName: string): {
    $elemMatch: {};
};
/**
 * Devuelve una condición con operador (and, or) para buscar elementos en un arreglo a través del elemMatch
 *
 * @export
 * @param {string} fieldName
 * @param {Array<string>} values
 * @param {string} keyName
 * @param {string} valueName
 * @returns {Object}
 */
export declare function queryArray(fieldName: string, values: any[], keyName: string, valueName: string, op?: string): {
    $or: any[];
    $and?: undefined;
} | {
    $and: any[];
    $or?: undefined;
};
export declare function buildQuery(query: object, searchSpecification: object): {};
export declare const MongoQuery: {
    equalMatch: typeof equalMatch;
    matchDate: typeof matchDate;
    partialString: typeof partialString;
    matchString: typeof matchString;
    queryMatch: typeof queryMatch;
    queryArray: typeof queryArray;
    buildQuery: typeof buildQuery;
};
