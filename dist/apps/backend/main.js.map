{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./apps/backend/src/app/Efectores/Routes/efectores.ts","webpack:///./apps/backend/src/app/Efectores/schemas/efectores.ts","webpack:///./apps/backend/src/app/Items/routes/items.ts","webpack:///./apps/backend/src/app/Items/schemas/items.ts","webpack:///./apps/backend/src/app/PlanillaED/Router/PlanillaED.ts","webpack:///./apps/backend/src/app/PlanillaED/Schemas/PlanillaED.ts","webpack:///./apps/backend/src/app/Servicios/Routes/Servicios.ts","webpack:///./apps/backend/src/app/Servicios/Schemas/servicios.ts","webpack:///./apps/backend/src/app/application.ts","webpack:///./apps/backend/src/app/auth/auth.routes.ts","webpack:///./apps/backend/src/app/categoriaitems/routes/categoriaItems.ts","webpack:///./apps/backend/src/app/categoriaitems/schemas/categoriaItems.ts","webpack:///./apps/backend/src/app/connection.ts","webpack:///./apps/backend/src/app/eDesempeno/routes/configEvaDesemp.ts","webpack:///./apps/backend/src/app/eDesempeno/schemas/configEvaDesemp.ts","webpack:///./apps/backend/src/app/services/mail/mail.ts","webpack:///./apps/backend/src/app/users/user.controller.ts","webpack:///./apps/backend/src/app/users/user.schema.ts","webpack:///./apps/backend/src/environments/environment.ts","webpack:///./apps/backend/src/main.ts","webpack:///external \"@andes/api-tool\"","webpack:///external \"@andes/api-tool/build/bootstrap\"","webpack:///external \"@andes/core\"","webpack:///external \"bcrypt\"","webpack:///external \"debug\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"handlebars\"","webpack:///external \"mongoose\"","webpack:///external \"nodemailer\"","webpack:///external \"path\"","webpack:///external \"shiro-trie\"","webpack:///external \"tslib\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;;;;;;AClFiC;AAEmB;AAGpD,MAAM,MAAM,GAAG,sDAAM,EAAE,CAAC;AAGxB,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IACjD,IAAI;QACA,MAAM,IAAI,GAAG,MAAM,+DAAY,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,0BAA0B;QAE3F,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;QACxD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC,CAAC;KACjE;AACL,CAAC,EAAC,CAAC;AAGH,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC/C,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACzB,MAAM,SAAS,GAAG,MAAM,+DAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAClD,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxB,CAAC,EAAC,CAAC;AAEY,qEAAM,EAAC;;;;;;;;;;;;;ACzBtB;AAAA;AAAA;AAAA;AAAA;AAAqC;AAIrC,MAAM,MAAM,GAAG,+CAAe,CAAC;AAM/B,MAAM,aAAa,GAAG,IAAI,MAAM,CAAW;IACvC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;CAC3C,CAAC,CAAC;AAEI,MAAM,YAAY,GAAG,8CAAc,CAAW,WAAW,EAAE,aAAa,EAAE,WAAW,CAAC,CAAC;AACrE;;;;;;;;;;;;;;;;;;;;AChBQ;AACS;AAC1C,mDAAmD;AAEnD,MAAM,MAAM,GAAG,sDAAM,EAAE,CAAC;AAGxB,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IAC7C,IAAI;QACA,MAAM,IAAI,GAAG,MAAM,qDAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,0BAA0B;QAErF,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC,CAAC;KACjE;AACL,CAAC,EAAC,CAAC;AAGH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC3C,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACzB,MAAM,SAAS,GAAG,MAAM,qDAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxB,CAAC,EAAC,CAAC;AAIH,+BAA+B;AAC/B,MAAM,CAAC,GAAG,CAAC,4CAA4C,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACzE,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC;IAC3C,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC;IACzB,uEAAuE;IACvE,MAAM,SAAS,GAAG,MAAM,qDAAM,CAAC,OAAO,CAAC,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAEvF,IAAI,SAAS,EAAE;QACX,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,yCAAyC;KAC7D;SAAM;QACH,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAE,yCAAyC;KAC7D;AACL,CAAC,EAAC,CAAC;AAGH,MAAM;AAGN,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACxC,IAAI;QACA,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,+BAA+B;QAC9F,MAAM,QAAQ,GAAG,MAAM,qDAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtB;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC,CAAC,gBAAgB;QACjE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAGH,WAAW;AAEX,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC1C,IAAI;QACA,MAAM,gBAAgB,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAE,+BAA+B;QAE/E,sEAAsE;QACtE,MAAM,kBAAkB,GAAG,MAAM,qDAAM,CAAC,OAAO,CAAC,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAEnF,4EAA4E;QAC5E,IAAI,kBAAkB,EAAE;YACpB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACxB,KAAK,EAAE,8DAA8D;aACxE,CAAC,CAAC;SACN;QAED,0FAA0F;QAC1F,MAAM,SAAS,GAAG,MAAM,qDAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;QAEzF,0DAA0D;QAC1D,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,8CAA8C,EAAE,CAAC,CAAC;SAC1F;QAGD,qCAAqC;QACrC,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAC;QAEjD,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAEvB;IAAC,OAAO,KAAK,EAAE;QACZ,8BAA8B;QAC9B,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;QACnD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAMH,uDAAuD;AACvD,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC5C,IAAI;QACA,MAAM,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1B,MAAM,aAAa,GAAG,GAAG,CAAC,IAAI,CAAC;QAC/B,MAAM,QAAQ,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,yCAAyC;QACzE,gFAAgF;QAChF,MAAM,SAAS,GAAG,MAAM,qDAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;QAC/E,IAAI,SAAS,EAAE;YACX,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACvB;aAAM;YACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;SAC9D;KACJ;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AACH;;;;;;;;;;;;;;EAcE;AAEF,8CAA8C;AAI9C,gBAAgB;AAChB,uCAAuC;AACvC,uFAAuF;AACvF,0BAA0B;AAC1B,8FAA8F;AAC9F,KAAK;AAGU,qEAAM,EAAC;;;;;;;;;;;;;AChJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AAErC,MAAM,MAAM,GAAG,IAAI,+CAAe,CAAC;IAC/B,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC7B,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;CAC1B,CAAC,CAAC;AAEI,MAAM,MAAM,GAAG,8CAAc,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AACjE,mFAAmF;AAInF,MAAM,MAAM,GAAG,+CAAe,CAAC;AAO/B,MAAM,UAAU,GAAG,IAAI,MAAM,CAAQ;IACjC,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;CAC1C,CAAC,CAAC;AAEI,MAAM,SAAS,GAAG,8CAAc,CAAQ,OAAO,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AACzD;;;;;;;;;;;;;;;;;;;;;ACzB8B;AACI;AACS;AAEjE,MAAM,MAAM,GAAG,sDAAM,EAAE,CAAC;AAExB,0EAA0E;AAE1E,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC;IAClE,IAAI;QACA,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAE1B,uFAAuF;QACvF,MAAM,QAAQ,GAAG,MAAM,mEAAe,CAAC,QAAQ,CAAC,EAAE,CAAC;aAC9C,QAAQ,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAG,oCAAoC;aACxF,QAAQ,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAE,qCAAqC;aACzF,QAAQ,CAAC,EAAE,IAAI,EAAE,sBAAsB,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC,wCAAwC;aAC1G,IAAI,EAAE,CAAC;QAEZ,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;SACvE;QAED,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtB;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;QACtD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+BAA+B,EAAE,KAAK,EAAE,CAAC,CAAC;KAC7E;AACL,CAAC,EAAC,CAAC;AAGH,EAAE;AAMF,MAAM,CAAC,GAAG,CAAC,wDAAwD,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC;IACxG,IAAI;QACA,MAAM,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAE/C,iEAAiE;QACjE,MAAM,QAAQ,GAAG,MAAM,mEAAe,CAAC,QAAQ,CAAC,UAAU,CAAC;aACtD,QAAQ,CAAC,sBAAsB,CAAC,CAAE,6EAA6E;aAC/G,IAAI,EAAE,CAAC,CAAE,yFAAyF;QAEvG,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;SACvE;QAED,wDAAwD;QACxD,MAAM,mBAAmB,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAChD,CAAC,GAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,WAAW,CAAC,CAAE,kDAAkD;SACtH,CAAC;QAEF,IAAI,CAAC,mBAAmB,EAAE;YACtB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yCAAyC,EAAE,CAAC,CAAC;SACvF;QAED,gDAAgD;QAChD,MAAM,cAAc,GAAG,mBAAmB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE,CAAC,CAAC;YACjE,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,KAAK,EAAE,IAAI,CAAC,KAAK;SACpB,CAAC,CAAC,CAAC;QAEJ,sCAAsC;QACtC,GAAG,CAAC,IAAI,CAAC;YACL,oBAAoB,EAAE,mBAAmB,CAAC,WAAW;YACrD,KAAK,EAAE,cAAc,CAAE,+BAA+B;SACzD,CAAC,CAAC;KACN;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,KAAK,CAAC,CAAC;QACpE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,6CAA6C,EAAE,KAAK,EAAE,CAAC,CAAC;KAC3F;AACL,CAAC,EAAC,CAAC;AAIH,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC5C,IAAI;QACA,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAExD,0EAA0E;QAC1E,MAAM,iBAAiB,GAAG,MAAM,mEAAe,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;QAEnF,IAAI,iBAAiB,EAAE;YACnB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qDAAqD,EAAE,CAAC,CAAC;SACnG;QAED,yCAAyC;QACzC,MAAM,aAAa,GAAG,IAAI,mEAAe,CAAC;YACtC,SAAS;YACT,UAAU;YACV,WAAW;YACX,aAAa,EAAE,IAAI,IAAI,EAAE;YACzB,UAAU,EAAE,EAAE;SACjB,CAAC,CAAC;QAEH,MAAM,gBAAgB,GAAG,MAAM,aAAa,CAAC,IAAI,EAAE,CAAC;QACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;KAC1C;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC,CAAC;KACnE;AACL,CAAC,EAAC,CAAC;AAEH;;;;;;;;;;;;;;;;;;;;;;EAsBE;AAEF,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC;IAC9D,IAAI;QACA,MAAM,SAAS,GAAG,MAAM,mEAAe,CAAC,IAAI,EAAE;aACzC,QAAQ,CAAC,sBAAsB,CAAC;aAChC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAG,qDAAqD;aACvF,QAAQ,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAE,sDAAsD;aACxF,IAAI,EAAE,CAAC;QAEZ,iDAAiD;QACjD,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACzB,IAAI,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBAC3D,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAC9B,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW,CAAC,CAC7C,CAAC;aACL;QACL,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACvB;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,iCAAiC,EAAE,KAAK,EAAE,CAAC,CAAC;KAC/E;AACL,CAAC,EAAC,CAAC;AAIH,wDAAwD;AACxD,MAAM,CAAC,GAAG,CAAC,6BAA6B,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC;IAC7E,IAAI;QACA,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAE1B,qDAAqD;QACrD,MAAM,QAAQ,GAAG,MAAM,mEAAe,CAAC,QAAQ,CAAC,EAAE,CAAC;aAC9C,QAAQ,CAAC,sBAAsB,CAAC;aAChC,IAAI,EAAE,CAAC;QAEZ,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;SACvE;QAED,4CAA4C;QAC5C,MAAM,iBAAiB,GAAG,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAc,EAAE,EAAE,CAAC,CAAC;YACnE,EAAE,EAAE,SAAS,CAAC,SAAS,CAAC,GAAG;YAC3B,WAAW,EAAE,SAAS,CAAC,SAAS,CAAC,WAAW;YAC5C,UAAU,EAAE,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,iCAAiC;SACvE,CAAC,CAAC,CAAC;QAEJ,GAAG,CAAC,IAAI,CAAC;YACL,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,QAAQ,CAAC,WAAW;YACjC,UAAU,EAAE,iBAAiB;SAChC,CAAC,CAAC;KACN;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,+CAA+C,EAAE,KAAK,CAAC,CAAC;QACtE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+CAA+C,EAAE,KAAK,EAAE,CAAC,CAAC;KAC7F;AACL,CAAC,EAAC,CAAC;AAEH,4CAA4C;AAC5C,MAAM,CAAC,GAAG,CAAC,6BAA6B,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC;IAC7E,IAAI;QACA,MAAM,EAAE,SAAS,EAAE,oBAAoB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAE5D,mDAAmD;QACnD,IAAI,CAAC,SAAS,IAAI,CAAC,oBAAoB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YAC9D,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,+CAA+C,EAAE,CAAC,CAAC;SAC7F;QAED,4BAA4B;QAC5B,MAAM,QAAQ,GAAG,MAAM,mEAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;SACvE;QAED,kDAAkD;QAClD,MAAM,kBAAkB,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,GAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QAE/G,IAAI,kBAAkB,EAAE;YACpB,4BAA4B;YAC5B,kBAAkB,CAAC,WAAW,GAAG,oBAAoB,CAAC;YAEtD,oCAAoC;YACpC,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAS,EAAE,EAAE,CAC3C,CAAC,kBAAkB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,aAAkB,EAAE,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CACvG,CAAC;YAEF,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBACxB,kBAAkB,CAAC,KAAK,GAAG,CAAC,GAAG,kBAAkB,CAAC,KAAK,EAAE,GAAG,WAAW,CAAC,CAAC;aAC5E;SACJ;aAAM;YACH,uCAAuC;YACvC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,oBAAoB,EAAE,KAAK,EAAE,CAAC,CAAC;SACrF;QAED,0CAA0C;QAC1C,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QACtB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,QAAQ,EAAE,CAAC,CAAC;KACpF;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC;QACjE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,0CAA0C,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KACvG;AACL,CAAC,EAAC,CAAC;AAGH,+BAA+B;AAC/B,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC;IACjE,IAAI;QACA,MAAM,MAAM,GAAG,MAAM,mEAAe,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACpD,GAAG,CAAC,IAAI,CAAC;YACL,OAAO,EAAE,0CAA0C;YACnD,YAAY,EAAE,MAAM,CAAC,YAAY;SACpC,CAAC,CAAC;KACN;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,wCAAwC,EAAE,KAAK,EAAE,CAAC,CAAC;KACtF;AACL,CAAC,EAAC,CAAC;AAEH,+BAA+B;AAC/B,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC;IACrE,IAAI;QACA,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAC1B,MAAM,MAAM,GAAG,MAAM,mEAAe,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAE3D,IAAI,CAAC,MAAM,EAAE;YACT,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;SACvE;QAED,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,eAAe,EAAE,MAAM,EAAE,CAAC,CAAC;KACvF;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gCAAgC,EAAE,KAAK,EAAE,CAAC,CAAC;KAC9E;AACL,CAAC,EAAC,CAAC;AAGH;GACG;AACH,MAAM,CAAC,GAAG,CAAC,6CAA6C,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC;IAC7F,IAAI;QACA,MAAM,EAAE,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAEnC,2CAA2C;QAC3C,MAAM,QAAQ,GAAG,MAAM,mEAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC;QACpE,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,0BAA0B,EAAE,CAAC,CAAC;SACxE;QAED,2EAA2E;QAC3E,mGAAmG;QACnG,MAAM,kBAAkB,GAAa,EAAE,CAAC;QACxC,IAAI,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC3D,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,GAAQ,EAAE,EAAE;gBACrC,IAAI,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;oBACvC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAS,EAAE,EAAE;wBAC5B,0CAA0C;wBAC1C,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;oBAC9C,CAAC,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;SACN;QAED,+FAA+F;QAC/F,MAAM,gBAAgB,GAAG,MAAM,2DAAU,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,kBAAkB,EAAE,EAAE,CAAC;aAChF,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC;aACxB,IAAI,EAAE,CAAC;QAEZ,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,gBAAgB,EAAE,CAAC,CAAC;KACzC;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;QAChE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,KAAK,EAAE,CAAC,CAAC;KACrE;AAML,CAAC,EAAC,CAAC;AACH,0DAA0D;AAC1D,MAAM,CAAC,GAAG,CAAC,uCAAuC,EAAE,CAAO,GAAY,EAAE,GAAa,EAAE,EAAE,CAAC;IACvF,IAAI;QACA,MAAM,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;QAClC,MAAM,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,iCAAiC;QAEjE,+DAA+D;QAC/D,IAAI,CAAC,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAC3C,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,2DAA2D,EAAE,CAAC,CAAC;SACzG;QAED,+BAA+B;QAC/B,MAAM,QAAQ,GAAG,MAAM,mEAAe,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;QACnE,IAAI,CAAC,QAAQ,EAAE;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;SACvE;QAED,4IAA4I;QAC5I,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,QAAQ,CAAC,UAAU,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC3D,KAAK,MAAM,SAAS,IAAI,QAAQ,CAAC,UAAU,EAAE;gBACzC,IAAI,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;oBACnD,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAS,EAAE,EAAE;wBAC7C,+DAA+D;wBAC/D,OAAO,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,QAAQ,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;oBACvG,CAAC,CAAC,CAAC;oBACH,IAAI,KAAK,EAAE;wBACP,MAAM,GAAG,IAAI,CAAC;wBACd,MAAM;qBACT;iBACJ;aACJ;SACJ;QAED,+EAA+E;QAC/E,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;KAC/B;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,wDAAwD,EAAE,KAAK,CAAC,CAAC;QAC/E,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,KAAK,EAAE,CAAC,CAAC;KAC5E;AACL,CAAC,EAAC,CAAC;AAEH,gFAAgF;AAChF,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAChD,IAAI;QACA,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAElD,gDAAgD;QAChD,IAAI,CAAC,WAAW,IAAI,CAAC,eAAe,EAAE;YAClC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,4CAA4C,EAAE,CAAC,CAAC;SAC1F;QAED,uFAAuF;QACvF,MAAM,SAAS,GAAG,MAAM,mEAAe,CAAC,gBAAgB,CACpD,EAAE,GAAG,EAAE,WAAW,EAAE,EACpB,EAAE,KAAK,EAAE,EAAE,sBAAsB,EAAE,EAAE,WAAW,EAAE,eAAe,EAAE,EAAE,EAAE,EACvE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,oCAAoC;SACrD,CAAC;QAEF,iCAAiC;QACjC,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,yBAAyB,EAAE,CAAC,CAAC;SACvE;QAED,oBAAoB;QACpB,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,8BAA8B,EAAE,SAAS,EAAE,CAAC,CAAC;KAEpE;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;QAChD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,4BAA4B,EAAE,CAAC,CAAC;KACnE;AACL,CAAC,EAAC,CAAC;AAGY,qEAAM,EAAC;;;;;;;;;;;;;AC5XtB;AAAA;AAAA;AAAA;AAAqC;AAKrC,MAAM,MAAM,GAAG,+CAAe,CAAC;AAmB/B,4FAA4F;AAC5F,MAAM,eAAe,GAAG,IAAI,MAAM,CAAC;IAC/B,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,eAAe,EAAE,QAAQ,EAAE,IAAI,EAAE;IAChF,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,KAAK,EAAE,CAAC;YACJ,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE;YACjD,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;YAC7C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAa,iBAAiB;SACxE,CAAC;CACL,CAAC,CAAC;AAEH,kGAAkG;AAClG,MAAM,gBAAgB,GAAG,IAAI,MAAM,CAAC;IAChC,aAAa,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC5E,UAAU,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7E,UAAU,EAAE,CAAC,eAAe,CAAC,CAAE,wEAAwE;CAC1G,CAAC,CAAC;AAEH,kDAAkD;AAC3C,MAAM,eAAe,GAAG,8CAAc,CAAc,YAAY,EAAE,gBAAgB,EAAE,YAAY,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;AC7CxE;AACoB;AAIrD,MAAM,MAAM,GAAG,sDAAM,EAAE,CAAC;AAGxB,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IACjD,IAAI;QACA,MAAM,IAAI,GAAG,MAAM,gEAAa,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,0BAA0B;QAE5F,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,4BAA4B,EAAE,CAAC,CAAC;KACjE;AACL,CAAC,EAAC,CAAC;AAGH,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC/C,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACzB,MAAM,SAAS,GAAG,MAAM,gEAAa,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACnD,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxB,CAAC,EAAC,CAAC;AAIH,MAAM;AAGN,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC5C,IAAI;QACA,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,+BAA+B;QAC9F,MAAM,QAAQ,GAAG,MAAM,gEAAa,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtB;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC,CAAC,gBAAgB;QACjE,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAGH,WAAW;AAEX,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC/C,IAAI;QACA,MAAM,gBAAgB,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAE,+BAA+B;QAE/E,sEAAsE;QACtE,MAAM,kBAAkB,GAAG,MAAM,gEAAa,CAAC,OAAO,CAAC,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAE1F,4EAA4E;QAC5E,IAAI,kBAAkB,EAAE;YACpB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACxB,KAAK,EAAE,8DAA8D;aACxE,CAAC,CAAC;SACN;QAED,0FAA0F;QAC1F,MAAM,SAAS,GAAG,MAAM,gEAAa,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;QAEhG,0DAA0D;QAC1D,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,8CAA8C,EAAE,CAAC,CAAC;SAC1F;QAGD,qCAAqC;QACrC,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAC;QAEjD,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAEvB;IAAC,OAAO,KAAK,EAAE;QACZ,8BAA8B;QAC9B,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;QACnD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAMH,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAClD,IAAI;QACA,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,SAAS,GAAG,MAAM,gEAAa,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QAC5D,IAAI,SAAS,EAAE;YACX,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;SAC9D;aAAM;YACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;SAC9D;KACJ;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAEH,8CAA8C;AAK/B,qEAAM,EAAC;;;;;;;;;;;;;ACxGtB;AAAA;AAAA;AAAA;AAAA;AAAqC;AAErC,MAAM,MAAM,GAAG,+CAAe,CAAC;AAM/B,MAAM,cAAc,GAAG,IAAI,MAAM,CAAY;IACzC,MAAM,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;CAC3C,CAAC,CAAC;AAEI,MAAM,aAAa,GAAG,8CAAc,CAAY,WAAW,EAAE,cAAc,EAAE,WAAW,CAAC,CAAC;AAEvE;AAC1B;;;;;;;;EAQE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtB6D;AACL;AACgB;AAE1E,MAAM,SAAS,GAAG,mBAAO,CAAC,8BAAY,CAAC,CAAC;AAExC,MAAM,IAAI,GAAG;IACT,IAAI,EAAE,0BAA0B;IAChC,OAAO,EAAE,OAAO;CACnB,CAAC;AAEF,MAAM,IAAI,GAAG,qEAAW,CAAC,IAAI,CAAC;AAC9B,MAAM,IAAI,GAAG,qEAAW,CAAC,IAAI,CAAC;AAC9B,MAAM,GAAG,GAAG,qEAAW,CAAC,GAAG,CAAC;AAErB,MAAM,WAAW,GAAG,IAAI,4EAAY,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;AACvE,WAAW,CAAC,GAAG,CAAC,oEAA8B,CAAC,CAAC;AAEzC,MAAM,kBAAkB,GAAG,UAAgB,GAAY,EAAE,GAAa,EAAE,IAAkB;;QAC7F,qDAAqD;QACrD,oFAAoF;QAEpF,MAAM,EAAE,IAAI,EAAE,GAAG,mBAAO,CAAC,wEAAqB,CAAC,CAAC;QAChD,MAAM,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QAChC,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;YACrC,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,CAAC;YACZ,QAAQ,EAAE,CAAC;SACd,CAAC,CAAC;QACH,IAAI,IAAI,EAAE;YACN,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC;YAChB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG;gBAClB,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,SAAS,EAAE,IAAI,CAAC,SAAS;aAC5B,CAAC;YACF,OAAO,IAAI,EAAE,CAAC;SACjB;aAAM;YACH,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;IACL,CAAC;CAAA,CAAC;AAEK,MAAM,YAAY,GAAG,GAAG,EAAE;IAC7B,IAAI,qEAAW,CAAC,GAAG,EAAE;QACjB,OAAO,CAAC,WAAW,CAAC,YAAY,EAAE,EAAE,kBAAkB,CAAC,CAAC;KAC3D;SAAM;QACH,cAAc;QACd,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;KACrC;AACL,CAAC,CAAC;AAEK,MAAM,eAAe,GAAG,CAAC,GAAY,EAAE,OAAe,EAAE,EAAE;IAC7D,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC/B,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;QAC9B,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,OAAO,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;KAC/B;AACL,CAAC,CAAC;AAEK,MAAM,aAAa,GAAG,CAAC,GAAY,EAAE,OAAe,EAAE,EAAE;IAC3D,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;QAC/B,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC;QAC9B,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,OAAO,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KACrC;AACL,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACrE2C;AACO;AAGG;AACtB;AAG1B,MAAM,UAAU,GAAG,wDAAW,CAAC,MAAM,EAAE,CAAC;AAE/C,UAAU,CAAC,GAAG,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IAC9D,IAAI;QACA,OAAO,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;KAC9C;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;AACL,CAAC,EAAC,CAAC;AAEH,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,CAAO,GAAY,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IAC9D,IAAI;QACA,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;QAC7B,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QACnC,MAAM,KAAK,GAAG,MAAM,+DAAQ,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QAC7E,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YACnD,IAAI,KAAK,EAAE;gBACP,MAAM,OAAO,GAAG,IAAI,8CAAK,CAAC,QAAQ,EAAE,CAAC;gBACrC,MAAM,QAAQ,GAAG,MAAM,wDAAW,CAAC,IAAI,CAAC;oBACpC,UAAU,EAAE,OAAO,CAAC,WAAW,EAAE;oBACjC,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;iBAClC,CAAC,CAAC;gBACH,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;aACxC;SACJ;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;AACL,CAAC,EAAC,CAAC;AAEH,UAAU,CAAC,IAAI,CAAC,cAAc,EAAE,CAAO,GAAY,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IAC/D,UAAU;IAEV,kEAAkE;IAClE,uBAAuB;IACvB,+BAA+B;IAC/B,kGAAkG;IAClG,4CAA4C;IAC5C,WAAW;IAEX,yDAAyD;IAEzD,2CAA2C;IAC3C,oBAAoB;IACpB,0BAA0B;IAC1B,MAAM;AAEV,CAAC,EAAC,CAAC;AAEH,iFAAiF;AACjF,aAAa;AACb,qCAAqC;AACrC,iEAAiE;AAEjE,oBAAoB;AACpB,4BAA4B;AAC5B,iGAAiG;AACjG,yCAAyC;AACzC,OAAO;AAEP,kDAAkD;AAElD,wCAAwC;AACxC,iBAAiB;AACjB,sBAAsB;AACtB,GAAG;AACH,KAAK;AAEL,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,wDAAW,CAAC,YAAY,EAAE,EAAE,CAAO,GAAY,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IAChG,IAAI;QACA,MAAM,0EAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/B,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;KACrC;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;AACL,CAAC,EAAC,CAAC;AAEH,+EAA+E;AAC/E,WAAW;AACX,yCAAyC;AACzC,kDAAkD;AAClD,4CAA4C;AAC5C,qBAAqB;AACrB,2BAA2B;AAC3B,OAAO;AACP,KAAK;AAEL,UAAU,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAO,GAAY,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IACtE,IAAI;QACA,MAAM,EAAE,QAAQ,EAAE,eAAe,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QAC/C,MAAM,KAAK,GAAG,MAAM,+DAAQ,CAAC,MAAM,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;QACjG,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAClB,MAAM,+DAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC;YAC7E,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SACrC;aAAM;YACH,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;SACpC;KACJ;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;AACL,CAAC,EAAC,CAAC;AAEH,UAAU,CAAC,IAAI,CAAC,sBAAsB,EAAE,wDAAW,CAAC,YAAY,EAAE,EAAE,CAAO,GAAY,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IACnG,IAAI;QACA,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;QACvC,MAAM,IAAI,GAAG,MAAM,+DAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAClD,IAAI,IAAI,EAAE;YACN,MAAM,+DAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,GAAG,CAAC,CAAC;YAClD,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SACrC;aAAM;YACH,OAAO,GAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;SACpC;KACJ;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;AACL,CAAC,EAAC,CAAC;AAEH,UAAU,CAAC,GAAG,CAAC,eAAe,EAAE,wDAAW,CAAC,YAAY,EAAE,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IAClF,IAAI;QACA,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;QACjC,MAAM,IAAI,GAAG,MAAM,+DAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,0DAA0D,EAAE,CAAC,CAAC;QACtH,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAElB;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;KACpB;AACL,CAAC,EAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACzI8B;AACwC;AAEzE,mDAAmD;AAEnD,MAAM,MAAM,GAAG,sDAAM,EAAE,CAAC;AAGxB,MAAM,CAAC,GAAG,CAAC,mBAAmB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IACtD,IAAI;QACA,wBAAwB;QACxB,MAAM,IAAI,GAAG,MAAM,0EAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,0BAA0B;QACrF,oCAAoC;QACpC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,CAAC,CAAC;KACf;AACL,CAAC,EAAC,CAAC;AACH;;;;;;;;;;;;;;EAcE;AAMF,sDAAsD;AACtD,0FAA0F;AAC1F,gDAAgD;AAEhD,gDAAgD;AAChD,yEAAyE;AAEzE,kBAAkB;AAClB,gDAAgD;AAChD,UAAU;AACV,iDAAiD;AACjD,GAAG;AACH,KAAK;AACL,yBAAyB;AAIzB,UAAU;AAGV,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAChD,IAAI;QACA,MAAM,QAAQ,GAAG,MAAM,0EAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtB;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC;AAIF,aAAa;AACb,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAChD,IAAI;QACA,wCAAwC;QACxC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACzB,MAAM,QAAQ,GAAG,MAAM,0EAAM,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnD,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtB;aAAM;YACH,MAAM,OAAO,GAAG,MAAM,0EAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC9C,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrB;KACJ;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAKH,MAAM,CAAC,GAAG,CAAC,sBAAsB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACnD,IAAI;QACA,MAAM,gBAAgB,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAE,+BAA+B;QAE/E,sEAAsE;QACtE,MAAM,kBAAkB,GAAG,MAAM,0EAAM,CAAC,OAAO,CAAC,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAEnF,4EAA4E;QAC5E,IAAI,kBAAkB,EAAE;YACpB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;gBACxB,KAAK,EAAE,8DAA8D;aACxE,CAAC,CAAC;SACN;QAED,0FAA0F;QAC1F,MAAM,SAAS,GAAG,MAAM,0EAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;QAEzF,0DAA0D;QAC1D,IAAI,CAAC,SAAS,EAAE;YACZ,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,8CAA8C,EAAE,CAAC,CAAC;SAC1F;QAGD,qCAAqC;QACrC,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,SAAS,CAAC,CAAC;QAEjD,yCAAyC;QACzC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAEvB;IAAC,OAAO,KAAK,EAAE;QACZ,8BAA8B;QAC9B,OAAO,CAAC,KAAK,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;QACnD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAIH;;;;;;;;;;;;;;;;;;;EAmBE;AACF,MAAM,CAAC,MAAM,CAAC,sBAAsB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACtD,IAAI;QACA,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,SAAS,GAAG,MAAM,0EAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QACrD,IAAI,SAAS,EAAE;YACX,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;SAC9D;aAAM;YACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;SAC9D;KACJ;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAEH,uDAAuD;AACxC,qEAAM,EAAC;;;;;;;;;;;;;ACjKtB;AAAA;AAAA;AAAA;AAAqC;AAErC,MAAM,MAAM,GAAG,+CAAe,CAAC;AAc/B,8DAA8D;AAC9D,MAAM,mBAAmB,GAAG,IAAI,MAAM,CAAiB;IACnD,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,KAAK,EAAE,CAAC;YACJ,GAAG,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE;YACjD,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;YAC7C,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAa,iBAAiB;SACxE,CAAC;CACL,CAAC,CAAC;AAEH,4DAA4D;AACrD,MAAM,kBAAkB,GAAG,8CAAc,CAAiB,eAAe,EAAE,mBAAmB,EAAE,gBAAgB,CAAC,CAAC;;;;;;;;;;;;;AC3BzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACN;AAE2B;AAE1D,SAAS,cAAc,CAAC,MAAM;IAC1B,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE;QACjB,QAAQ,EAAE,IAAI;QACd,UAAU,EAAE,KAAK;KACpB,CAAC,CAAC;AACP,CAAC;AAEM,MAAM,WAAW;IAGpB;;;;;;OAMG;IACH,MAAM,CAAC,UAAU;QACb,qBAAqB;QACrB,8DAA8D;QAC7D,gDAAwB,GAAG,MAAM,CAAC,OAAO,CAAC;QAC3C,+CAAe,CAAC,cAAc,CAAC,CAAC;QAEhC,gCAAgC;QAChC,MAAM,WAAW,GAAG,kCAAK,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,WAAW,CAAC,OAAO,EAAE;YACrB,4CAAY,CAAC,OAAO,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAClE,WAAW,CAAC,iBAAiB,EAAE,UAAU,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,CAAC,CACpF,CAAC;SACL;QAED,iCAAiC;QACjC,eAAe;QAEf,gDAAgB,CAAC,qEAAW,CAAC,UAAU,EAAE;YACrC,cAAc,EAAE,MAAM,CAAC,SAAS;YAChC,iBAAiB,EAAE,GAAG;SACzB,CAAC,CAAC;QAEH,IAAI,CAAC,IAAI,GAAG,mDAAmB,CAAC;QAEhC,oBAAoB;QACpB,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IAEO,MAAM,CAAC,YAAY,CAAC,IAAY,EAAE,UAA+B;QACrE,MAAM,aAAa,GAAG,kCAAK,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC;QACjD,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACnE,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,CAAC,aAAa,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC;QAClE,UAAU,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,CAAC;QAC7D,UAAU,CAAC,EAAE,CAAC,aAAa,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC;QACjE,UAAU,CAAC,EAAE,CAAC,cAAc,EAAE,GAAG,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;IACvE,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;AC1DgC;AACmB;AACpD,mDAAmD;AAEnD,MAAM,MAAM,GAAG,sDAAM,EAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,CAAC;IAEhD,MAAM,IAAI,GAAG,MAAM,+DAAM,CAAC,IAAI,EAAE,CAAC;IACjC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACf,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AACpB,CAAC,EAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC9C,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACzB,MAAM,SAAS,GAAG,MAAM,+DAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC5C,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACxB,CAAC,EAAC,CAAC;AAEH,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC3C,IAAI;QACA,MAAM,QAAQ,GAAG,MAAM,+DAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/C,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtB;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC;AAIF,aAAa;AACb,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC3C,IAAI;QACA,wCAAwC;QACxC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YACzB,MAAM,QAAQ,GAAG,MAAM,+DAAM,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACnD,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACtB;aAAM;YACH,MAAM,OAAO,GAAG,MAAM,+DAAM,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAC9C,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACrB;KACJ;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AACH,cAAc;AAEd,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IAC9C,IAAI;QACA,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,SAAS,GAAG,MAAM,+DAAM,CAAC,iBAAiB,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QAC/D,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KACvB;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAEH,uDAAuD;AAGvD,QAAQ;AAER,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAO,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;IACjD,IAAI;QACA,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,MAAM,SAAS,GAAG,MAAM,+DAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QACrD,IAAI,SAAS,EAAE;YACX,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mCAAmC,EAAE,CAAC,CAAC;SAC9D;aAAM;YACH,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,CAAC,CAAC;SAC9D;KACJ;IAAC,OAAO,KAAK,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,sBAAsB,EAAE,CAAC,CAAC;KAC3D;AACL,CAAC,EAAC,CAAC;AAEH,kDAAkD;AAIlD,gBAAgB;AAChB,uCAAuC;AACvC,uFAAuF;AACvF,wCAAwC;AACxC,8FAA8F;AAC9F,KAAK;AAGU,qEAAM,EAAC;;;;;;;;;;;;;ACxFtB;AAAA;AAAA;AAAA;AAAqC;AAErC,MAAM,MAAM,GAAG,IAAI,+CAAe,CAC9B;IAEI,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IAC7B,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE;IACvB,gBAAgB,EAAE,EAAE,IAAI,EAAE,+CAAe,CAAC,KAAK,CAAC,QAAQ,EAAE;CAC7D,CAEJ,CAAC;AAEK,MAAM,MAAM,GAAG,8CAAc,CAAC,iBAAiB,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;AAC3E,mFAAmF;;;;;;;;;;;;;;;;;;;;;;;;;ACbnB;AACvC;AACzB,MAAM,IAAI,GAAG,mBAAO,CAAC,kBAAM,CAAC,CAAC;AAC7B,MAAM,UAAU,GAAG,mBAAO,CAAC,8BAAY,CAAC,CAAC;AACzC,MAAM,UAAU,GAAG,mBAAO,CAAC,8BAAY,CAAC,CAAC;AAmBlC,SAAe,QAAQ,CAAC,OAAoB;;QAC/C,MAAM,WAAW,GAAG;YAChB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,EAAE,EAAE,OAAO,CAAC,EAAE;YACd,OAAO,EAAE,OAAO,CAAC,OAAO;YACxB,IAAI,EAAE,OAAO,CAAC,IAAI;YAClB,IAAI,EAAE,OAAO,CAAC,IAAI;SACrB,CAAC;QAEF,IAAI;YACA,MAAM,WAAW,GAAG,MAAM,UAAU,CAAC,eAAe,CAAC;gBACjD,IAAI,EAAE,qEAAW,CAAC,IAAI,CAAC,IAAI;gBAC3B,IAAI,EAAE,qEAAW,CAAC,IAAI,CAAC,IAAI;gBAC3B,MAAM,EAAE,qEAAW,CAAC,IAAI,CAAC,MAAM;gBAC/B,IAAI,EAAE,qEAAW,CAAC,IAAI,CAAC,IAAI;aAC9B,CAAC,CAAC;YAEH,OAAO,MAAM,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;SAClD;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,GAAG,CAAC;SACd;IACL,CAAC;CAAA;AAEM,SAAS,uBAAuB,CAAC,IAAY;IAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,wCAAwC,IAAI,OAAO,CAAC,CAAC;IAC/F,MAAM,IAAI,GAAG,+CAAe,CAAC,QAAQ,CAAC,CAAC;IACvC,UAAU,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3D,CAAC;AAEM,SAAS,UAAU,CAAC,YAAoB,EAAE,MAAW;IACxD,MAAM,aAAa,GAAG,uCAAuC,CAAC;IAC9D,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,aAAa,EAAE,YAAY,CAAC,CAAC;IAElE,MAAM,IAAI,GAAG,+CAAe,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;IACzD,IAAI;QACA,MAAM,QAAQ,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1C,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;QACpC,OAAO,UAAU,CAAC;KACrB;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,GAAG,CAAC;KACd;AACL,CAAC;AAED,oBAAoB;AACb,SAAe,aAAa,CAAC,IAAI,EAAE,IAAkE;;QACxG,MAAM,cAAc,GAAmB;YACnC,MAAM,EAAE,IAAI,CAAC,OAAO;YACpB,OAAO,EAAE,IAAI,CAAC,IAAI;YAClB,GAAG,EAAE,IAAI,CAAC,GAAG;SAChB,CAAC;QAEF,6CAA6C;QAC7C,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAE9B,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QAE7D,MAAM,IAAI,GAAgB;YACtB,IAAI,EAAE,+BAA+B,qEAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG;YAClE,EAAE,EAAE,cAAc,CAAC,OAAO,CAAC,KAAK;YAChC,OAAO,EAAE,cAAc,CAAC,MAAM;YAC9B,IAAI;SACP,CAAC;QAEF,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;CAAA;AAGD,oBAAoB;AACb,SAAe,cAAc,CAAC,IAAI;;QAErC,MAAM,cAAc,GAAmB;YACnC,MAAM,EAAE,yBAAyB;YACjC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,IAAI;YAClB,SAAS,EAAE,IAAI,CAAC,SAAS;SAC5B,CAAC;QAEF,6CAA6C;QAC7C,uBAAuB,CAAC,kBAAkB,CAAC,CAAC;QAE5C,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;QAC7D,MAAM,IAAI,GAAgB;YACtB,IAAI,EAAE,+BAA+B,cAAc,CAAC,OAAO,CAAC,KAAK,GAAG;YACpE,EAAE,EAAE,qEAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;YAC9B,OAAO,EAAE,cAAc,CAAC,MAAM;YAC9B,IAAI;SACP;QAED,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;CAAA;AAAA,CAAC;;;;;;;;;;;;;AC/GF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACpC;AAIrC,MAAM,aAAc,SAAQ,wDAAY;IAAxC;;QACE,UAAK,GAAG,iDAAI,CAAC;QACb,iBAAY,GAAG,OAAO,CAAC;QACvB,mBAAc,GAAG,MAAM,CAAC;QACxB,gBAAW,GAAG,EAAE,CAAC;QACjB,iBAAY,GAAG;YACb,QAAQ,EAAE,sDAAU,CAAC,aAAa;YAClC,MAAM,EAAE,sDAAU,CAAC,aAAa;YAChC,SAAS,EAAE,sDAAU,CAAC,aAAa;YACnC,eAAe,EAAE,sDAAU,CAAC,UAAU;YACtC,MAAM,EAAE,sDAAU,CAAC,UAAU;YAC7B,KAAK,EAAE,sDAAU,CAAC,aAAa;YAC/B,MAAM,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC;SACrD,CAAC;QAEF,sDAAsD;QACtD,2FAA2F;QAC3F,8BAA8B;QAC9B,+BAA+B;QAC/B,8DAA8D;QAC9D,uDAAuD;QACvD,QAAQ;QACR,oCAAoC;QACpC,MAAM;QAEN,qDAAqD;QACrD,yEAAyE;QACzE,8BAA8B;QAC9B,+BAA+B;QAC/B,uFAAuF;QACvF,uDAAuD;QACvD,QAAQ;QACR,MAAM;IACR,CAAC;CAAA;AAEM,MAAM,QAAQ,GAAG,IAAI,aAAa,EAAE,CAAC;AAErC,MAAM,WAAW,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;AC3CZ;AACrC,MAAM,MAAM,GAAG,mBAAO,CAAC,sBAAQ,CAAC,CAAC;AAEjC,6CAA6C;AAC7C,MAAM,WAAW,GAAG,wJAAwJ,CAAC;AAEtK,MAAM,WAAW,GAAG,IAAI,+CAAe,CAAC;IAC3C,MAAM,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IACzC,MAAM,EAAE,MAAM;IACd,QAAQ,EAAE,MAAM;IAChB,SAAS,EAAE,MAAM;IACjB,KAAK,EAAE;QACH,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,IAAI;QACf,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,WAAW;QAClB,KAAK,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;KAC1B;IACD,QAAQ,EAAE,MAAM;IAChB,QAAQ,EAAE,MAAM;IAChB,QAAQ,EAAE,CAAC,MAAM,CAAC;IAClB,eAAe,EAAE,MAAM;IACvB,WAAW,EACP,CAAC;YACG,SAAS,EAAE,IAAI;YACf,GAAG,EAAE;gBACD,IAAI,EAAE,+CAAe,CAAC,KAAK,CAAC,QAAQ;gBACpC,GAAG,EAAE,WAAW;aACnB;SACJ,CAAC;CACT,CAAC,CAAC;AAEH,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,UAA2B,IAAI;;QACnD,MAAM,WAAW,GAAG,CAAC,CAAC;QAEtB,IAAI,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,eAAe,GAAG,IAAI,8CAAc,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;SACtE;QAED,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE;YAC9B,OAAO,IAAI,EAAE,CAAC;SACjB;QACD,IAAI;YACA,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC/C,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,OAAO,IAAI,EAAE,CAAC;SACjB;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;IACL,CAAC;CAAA,CAAC,CAAC;AAEH,WAAW,CAAC,OAAO,CAAC,eAAe,GAAG,UAAgB,eAAe;;QACjE,OAAO,MAAM,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChE,CAAC;CAAA,CAAC;AAEK,MAAM,IAAI,GAAG,8CAAc,CAAC,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;;;;;;;;;;;;;ACxDlE;AAAA;AAAA;AAAO,MAAM,WAAW,GAAG;IACvB,UAAU,EAAE,KAAK;IACjB,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI;IACxC,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,SAAS;IACnC,cAAc,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,UAAU;IACpD,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,IAAI,EAAE;IACpC,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,IAAI,IAAI;IAChC,UAAU,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,oDAAoD;IAC1F,WAAW,EAAE;QACT,GAAG,EAAE;YACD,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,6CAA6C;YAC7E,OAAO,EAAE;gBACL,cAAc,EAAE,MAAM,CAAC,SAAS;gBAChC,iBAAiB,EAAE,IAAI;gBACvB,eAAe,EAAE,IAAI;aACxB;SACJ;KACJ;IACD,IAAI,EAAE;QACF,IAAI,EAAE,gBAAgB;QACtB,IAAI,EAAE,GAAG;QACT,MAAM,EAAE,KAAK;QACb,IAAI,EAAE;YACF,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,IAAI,kBAAkB;YACjD,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,IAAI,UAAU;SAChD;KACJ;CACJ,CAAC;AAEK,MAAM,IAAI,GAAG,EAEnB,CAAC;;;;;;;;;;;;;AC/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAAsE;AACF;AACM;AACvB;AACU;AACE;AACG;AAGlE,mBAAO,CAAC,sBAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAC3B,MAAM,EAAE,WAAW,EAAE,GAAG,mBAAO,CAAC,8DAAkB,CAAC,CAAC;AACpD,MAAM,EAAE,WAAW,EAAE,GAAG,mBAAO,CAAC,gEAAmB,CAAC,CAAC;AACrD,WAAW,CAAC,UAAU,EAAE,CAAC;AAEzB,aAAa;AACb,MAAM,WAAW,GAAG,mBAAO,CAAC,oFAA6B,CAAC,CAAC,WAAW,CAAC;AACvE,MAAM,UAAU,GAAG,mBAAO,CAAC,0EAAwB,CAAC,CAAC,UAAU,CAAC;AAEhE,QAAQ;AACR,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;AACvD,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,8EAAa,EAAE,CAAC;AACxD,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,+DAAW,EAAE,CAAC;AACtD,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,uEAAa,EAAE,CAAC;AACxD,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,uEAAe,EAAE,CAAC;AAC1D,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,yEAAgB,EAAE,CAAC;AAE3D,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,iFAAgB,EAAE,CAAC;AAE3D,WAAW,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;AACtD,WAAW,CAAC,MAAM,EAAE;AACpB,WAAW,CAAC,KAAK,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AC9BpB,4C;;;;;;;;;;;ACAA,4D;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,qC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,kC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Router } from 'express';\n\nimport { EfectorModel } from '../schemas/efectores';\n\n\nconst router = Router();\n\n\nrouter.get('/rmEfectores', async (req, res, next) => {\n    try {\n        const data = await EfectorModel.find().sort({ descripcion: 1 }); // 1 para orden ascendente\n\n        res.json(data);\n    } catch (error) {\n        console.error('Error al obtener los Efectores:', error);\n        res.status(500).json({ error: 'Error al obtener los items' });\n    }\n});\n\n\nrouter.get('/rmEfectores/:id', async (req, res) => {\n    const id = req.params.id;\n    const respuesta = await EfectorModel.findById(id);\n    res.json(respuesta);\n});\n\nexport default router;\n\n","\nimport * as mongoose from 'mongoose';\n\n\n\nconst Schema = mongoose.Schema;\n\nexport interface IEfector extends mongoose.Document {\n    nombre: string;\n}\n\nconst EfectorSchema = new Schema<IEfector>({\n    nombre: { type: String, required: true }\n});\n\nexport const EfectorModel = mongoose.model<IEfector>('Efectores', EfectorSchema, 'efectores');\nexport { EfectorSchema };\n\n","import { Router } from 'express';\nimport { modelo } from '../schemas/items';\n// import { application } from '../../application';\n\nconst router = Router();\n\n\nrouter.get('/rmItems', async (req, res, next) => {\n    try {\n        const data = await modelo.find().sort({ descripcion: 1 }); // 1 para orden ascendente\n\n        res.json(data);\n    } catch (error) {\n        console.error('Error al obtener los items:', error);\n        res.status(500).json({ error: 'Error al obtener los items' });\n    }\n});\n\n\nrouter.get('/rmItems/:id', async (req, res) => {\n    const id = req.params.id;\n    const respuesta = await modelo.findById(id);\n    res.json(respuesta);\n});\n\n\n\n// Ver si la descripción existe\nrouter.get('/rItems/verificar-descripcion/:descripcion', async (req, res) => {\n    const descripcion = req.params.descripcion;\n    const { id } = req.query;\n    // Buscar una items con la misma descripción pero excluir la ite actual\n    const categoria = await modelo.findOne({ descripcion: descripcion, _id: { $ne: id } });\n\n    if (categoria) {\n        res.json(false); // La descripción ya existe (no es única)\n    } else {\n        res.json(true);  // La descripción es única (puede usarse)\n    }\n});\n\n\n//alta\n\n\nrouter.post('/rmItems', async (req, res) => {\n    try {\n        console.log('Solicitud POST recibida en /rmItems:', req.body); // Log de la solicitud recibida\n        const newItems = await modelo.create(req.body);\n        res.json(newItems);\n    } catch (error) {\n        console.error('Error al crear el ítem:', error); // Log del error\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n\n//modificar\n\nrouter.put('/rItems/:id', async (req, res) => {\n    try {\n        const nuevaDescripcion = req.body.descripcion;  // Obtener la nueva descripción\n\n        // Verificar si ya existe cualquier categoría con la misma descripción\n        const categoriaExistente = await modelo.findOne({ descripcion: nuevaDescripcion });\n\n        // Si se encuentra una categoría con la misma descripción, devolver un error\n        if (categoriaExistente) {\n            return res.status(400).json({\n                error: 'La descripción ya se encuentra registrada en otro documento.'\n            });\n        }\n\n        // Proceder a la actualización ya que no se encontró ninguna categoría con esa descripción\n        const respuesta = await modelo.findByIdAndUpdate(req.params.id, req.body, { new: true });\n\n        // Si no se encuentra la categoría con el ID proporcionado\n        if (!respuesta) {\n            return res.status(404).json({ error: 'No se encontró la categoría para actualizar.' });\n        }\n\n\n        // Mostrar la respuesta en la consola\n        console.log('Categoría actualizada:', respuesta);\n\n        // Responder con la categoría actualizada\n        res.json(respuesta);\n\n    } catch (error) {\n        // Manejo de errores generales\n        console.error('Error en la actualización:', error);\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n\n\n\n\n// Ruta PATCH para actualizar parcialmente un documento\nrouter.patch('/rItems/:id', async (req, res) => {\n    try {\n        const _id = req.params.id;\n        const actualizacion = req.body;\n        const opciones = { new: true }; // Para devolver el documento actualizado\n        //const respuesta = await modelo.findByIdAndUpdate(id, actualizacion, opciones);\n        const respuesta = await modelo.findByIdAndUpdate(_id, actualizacion, opciones);\n        if (respuesta) {\n            res.json(respuesta);\n        } else {\n            res.status(404).json({ error: 'Documento no encontrado' });\n        }\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n/** \nrouter.delete('/rItems/:id', async (req, res) => {\n    try {\n        const id = req.params.id;\n        const respuesta = await modelo.findByIdAndDelete(id);\n        if (respuesta) {\n            res.json({ message: 'Documento eliminado correctamente' });\n        } else {\n            res.status(404).json({ error: 'Documento no encontrado' });\n        }\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n*/\n\n// thunder   http://localhost:3000/api/rItems/\n\n\n\n//put modificaar\n//router.post('/items', (req, res) => {\n//    const newItem = req.body; // El nuevo item se espera en el cuerpo de la solicitud\n//    items.push(newItem);\n//    res.status(201).json(newItem); // Responder con el item creado y un código de estado 201\n//});\n\n\nexport default router;\n\n","import * as mongoose from 'mongoose';\n\nconst schema = new mongoose.Schema({\n    descripcion: { type: String },\n    valor: { type: Number },\n});\n\nexport const modelo = mongoose.model('items', schema, 'edItems');\n//                                   este formulario             tabla o collection\n\n\n\nconst Schema = mongoose.Schema;\n\nexport interface IItem extends mongoose.Document {\n    descripcion: string;\n    valor: number;\n}\n\nconst ItemSchema = new Schema<IItem>({\n    descripcion: { type: String, required: true },\n    valor: { type: Number, required: true }\n});\n\nexport const ItemModel = mongoose.model<IItem>('Items', ItemSchema, 'edItems');\nexport { ItemSchema };\n","import { Router, Request, Response } from 'express';\nimport { PlanillaEDModel } from '../Schemas/PlanillaED';\nimport { modelo as ItemsModel } from '../../Items/schemas/items';\n\nconst router = Router();\n\n// lista todos los datos del documento segun id enviado para listado o pdf\n\nrouter.get('/planillasED/:id', async (req: Request, res: Response) => {\n    try {\n        const { id } = req.params;\n\n        // Buscar la planilla por ID y popular las referencias de efector, servicio y categoría\n        const planilla = await PlanillaEDModel.findById(id)\n            .populate({ path: 'idEfector', select: 'nombre' })   // Trae la 'descripcion' del Efector\n            .populate({ path: 'idServicio', select: 'nombre' })  // Trae la 'descripcion' del Servicio\n            .populate({ path: 'categorias.categoria', select: 'descripcion' }) // Trae la 'descripcion' de la categoría\n            .lean();\n\n        if (!planilla) {\n            return res.status(404).json({ message: 'Planilla no encontrada.' });\n        }\n\n        res.json(planilla);\n    } catch (error) {\n        console.error('Error al obtener la planilla:', error);\n        res.status(500).json({ message: 'Error al obtener la planilla.', error });\n    }\n});\n\n\n//\n\n\n\n\n\nrouter.get('/planillasED/:idPlanilla/categorias/:idCategoria/items', async (req: Request, res: Response) => {\n    try {\n        const { idPlanilla, idCategoria } = req.params;\n\n        // Buscar la planilla por ID y popular las categorías y sus ítems\n        const planilla = await PlanillaEDModel.findById(idPlanilla)\n            .populate('categorias.categoria')  // Asegúrate de que 'categorias.categoria' es un campo de referencia adecuado\n            .lean();  // Usa .lean() para mejorar el rendimiento al no necesitar instanciar objetos de Mongoose\n\n        if (!planilla) {\n            return res.status(404).json({ message: 'Planilla no encontrada.' });\n        }\n\n        // Filtrar la categoría específica dentro de la planilla\n        const categoriaEncontrada = planilla.categorias.find(\n            (cat: any) => String(cat.categoria._id) === String(idCategoria)  // Asegúrate de que se compara correctamente el ID\n        );\n\n        if (!categoriaEncontrada) {\n            return res.status(404).json({ message: 'Categoría no encontrada en la planilla.' });\n        }\n\n        // Extraer los ítems con id, descripcion y valor\n        const itemsFiltrados = categoriaEncontrada.items.map((item: any) => ({\n            _id: item._id,  // Asegúrate de que 'item._id' es el campo correcto\n            descripcion: item.descripcion,\n            valor: item.valor,\n        }));\n\n        // Responder con los datos encontrados\n        res.json({\n            descripcionCategoria: categoriaEncontrada.descripcion,  // Devolver la descripción de la categoría\n            items: itemsFiltrados  // Devolver los ítems filtrados\n        });\n    } catch (error) {\n        console.error('Error al obtener los ítems de la categoría:', error);\n        res.status(500).json({ message: 'Error al obtener los ítems de la categoría.', error });\n    }\n});\n\n\n\nrouter.post('/planillasED', async (req, res) => {\n    try {\n        const { idEfector, idServicio, descripcion } = req.body;\n\n        // Verificar si ya existe una planilla con el mismo idEfector e idServicio\n        const planillaExistente = await PlanillaEDModel.findOne({ idEfector, idServicio });\n\n        if (planillaExistente) {\n            return res.status(400).json({ message: 'Ya existe una planilla con este Efector y Servicio.' });\n        }\n\n        // Si no existe, crear una nueva planilla\n        const nuevaPlanilla = new PlanillaEDModel({\n            idEfector,\n            idServicio,\n            descripcion,\n            fechaCreacion: new Date(),\n            categorias: [],\n        });\n\n        const planillaGuardada = await nuevaPlanilla.save();\n        res.status(201).json(planillaGuardada);\n    } catch (error) {\n        console.error('Error al crear la planilla:', error);\n        res.status(500).json({ message: 'Error interno del servidor' });\n    }\n});\n\n/*\n// Obtener todas las planillas\nrouter.get('/planillasED', async (req: Request, res: Response) => {\n    try {\n        const planillas = await PlanillaEDModel.find()\n            .populate('categorias.categoria')\n            .lean(); // Convertir a objetos JSON planos\n\n        // Ordenar las categorías dentro de cada planilla\n        planillas.forEach(planilla => {\n            if (planilla.categorias && Array.isArray(planilla.categorias)) {\n                planilla.categorias.sort((a, b) =>\n                    a.descripcion.localeCompare(b.descripcion)\n                );\n            }\n        });\n\n        res.json(planillas);\n    } catch (error) {\n        res.status(500).json({ message: 'Error al obtener las planillas.', error });\n    }\n});\n*/\n\nrouter.get('/planillasED', async (req: Request, res: Response) => {\n    try {\n        const planillas = await PlanillaEDModel.find()\n            .populate('categorias.categoria')\n            .populate('idEfector', 'nombre')   // Popula el efector y obtiene solo el campo \"nombre\"\n            .populate('idServicio', 'nombre')  // Popula el servicio y obtiene solo el campo \"nombre\"\n            .lean();\n\n        // Ordenar las categorías dentro de cada planilla\n        planillas.forEach(planilla => {\n            if (planilla.categorias && Array.isArray(planilla.categorias)) {\n                planilla.categorias.sort((a, b) =>\n                    a.descripcion.localeCompare(b.descripcion)\n                );\n            }\n        });\n\n        res.json(planillas);\n    } catch (error) {\n        res.status(500).json({ message: 'Error al obtener las planillas.', error });\n    }\n});\n\n\n\n// Obtener categorías e ítems de una planilla específica\nrouter.get('/planillasED/:id/categorias', async (req: Request, res: Response) => {\n    try {\n        const { id } = req.params;\n\n        // Buscar la planilla por ID y popular las categorías\n        const planilla = await PlanillaEDModel.findById(id)\n            .populate('categorias.categoria')\n            .lean();\n\n        if (!planilla) {\n            return res.status(404).json({ message: 'Planilla no encontrada.' });\n        }\n\n        // Agrupar categorías con el conteo de ítems\n        const categoriasResumen = planilla.categorias.map((categoria: any) => ({\n            id: categoria.categoria._id, // ID de la categoría\n            descripcion: categoria.categoria.descripcion, // Descripción de la categoría\n            totalItems: categoria.items.length // Total de ítems en la categoría\n        }));\n\n        res.json({\n            planillaId: id,\n            descripcion: planilla.descripcion,\n            categorias: categoriasResumen,\n        });\n    } catch (error) {\n        console.error('Error al obtener categorías y total de ítems:', error);\n        res.status(500).json({ message: 'Error al obtener categorías y total de ítems.', error });\n    }\n});\n\n// Agregar un console.log en la ruta del PUT\nrouter.put('/planillasED/:id/categorias', async (req: Request, res: Response) => {\n    try {\n        const { categoria, descripcionCategoria, items } = req.body;\n\n        // Verificar que los datos están bien estructurados\n        if (!categoria || !descripcionCategoria || !Array.isArray(items)) {\n            return res.status(400).json({ message: 'Faltan datos: categoría, descripción o ítems.' });\n        }\n\n        // Buscar la planilla por ID\n        const planilla = await PlanillaEDModel.findById(req.params.id);\n        if (!planilla) {\n            return res.status(404).json({ message: 'Planilla no encontrada.' });\n        }\n\n        // Buscar si la categoría ya existe en la planilla\n        const categoriaExistente = planilla.categorias.find((cat: any) => String(cat.categoria) === String(categoria));\n\n        if (categoriaExistente) {\n            // Actualizar la descripción\n            categoriaExistente.descripcion = descripcionCategoria;\n\n            // Filtrar ítems nuevos y agregarlos\n            const nuevosItems = items.filter((item: any) =>\n                !categoriaExistente.items.some((itemExistente: any) => String(itemExistente.id) === String(item.id))\n            );\n\n            if (nuevosItems.length > 0) {\n                categoriaExistente.items = [...categoriaExistente.items, ...nuevosItems];\n            }\n        } else {\n            // Si la categoría no existe, agregarla\n            planilla.categorias.push({ categoria, descripcion: descripcionCategoria, items });\n        }\n\n        // Guardar los cambios en la base de datos\n        await planilla.save();\n        res.status(200).json({ message: 'Planilla actualizada exitosamente', planilla });\n    } catch (error) {\n        console.error('Error al actualizar la planilla:', error.message);\n        res.status(500).json({ message: 'Error interno al actualizar la planilla.', error: error.message });\n    }\n});\n\n\n// Eliminar todas las planillas\nrouter.delete('/planillasED', async (req: Request, res: Response) => {\n    try {\n        const result = await PlanillaEDModel.deleteMany({});\n        res.json({\n            message: 'Todas las planillas han sido eliminadas.',\n            deletedCount: result.deletedCount\n        });\n    } catch (error) {\n        res.status(500).json({ message: 'Error al eliminar todas las planillas.', error });\n    }\n});\n\n// Eliminar una planilla por ID\nrouter.delete('/planillasED/:id', async (req: Request, res: Response) => {\n    try {\n        const { id } = req.params;\n        const result = await PlanillaEDModel.findByIdAndDelete(id);\n\n        if (!result) {\n            return res.status(404).json({ message: 'Planilla no encontrada.' });\n        }\n\n        res.json({ message: 'Planilla eliminada correctamente.', deletedPlanilla: result });\n    } catch (error) {\n        res.status(500).json({ message: 'Error al eliminar la planilla.', error });\n    }\n});\n\n\n/**\n */\nrouter.get('/planillasED/:idDocumento/items-disponibles', async (req: Request, res: Response) => {\n    try {\n        const { idDocumento } = req.params;\n\n        // Buscar el documento (planilla) por su ID\n        const planilla = await PlanillaEDModel.findById(idDocumento).lean();\n        if (!planilla) {\n            return res.status(404).json({ message: 'Documento no encontrado.' });\n        }\n\n        // Recolectar todos los IDs de ítems que ya están asociados en la planilla.\n        // Se asume que la planilla tiene un arreglo \"categorias\" y cada categoría tiene un arreglo \"items\"\n        const itemIdsEnDocumento: string[] = [];\n        if (planilla.categorias && Array.isArray(planilla.categorias)) {\n            planilla.categorias.forEach((cat: any) => {\n                if (cat.items && Array.isArray(cat.items)) {\n                    cat.items.forEach((item: any) => {\n                        // Se asegura de convertir el _id a string\n                        itemIdsEnDocumento.push(String(item._id));\n                    });\n                }\n            });\n        }\n\n        // Consultar en la colección de ítems todos aquellos que NO se encuentren en itemIdsEnDocumento\n        const itemsDisponibles = await ItemsModel.find({ _id: { $nin: itemIdsEnDocumento } })\n            .sort({ descripcion: 1 })\n            .lean();\n\n        res.json({ items: itemsDisponibles });\n    } catch (error) {\n        console.error('Error al obtener los ítems disponibles:', error);\n        res.status(500).json({ message: 'Error en el servidor.', error });\n    }\n\n\n\n\n\n});\n// items duplicado en documento (buscando por descripción)\nrouter.get('/planillasED/:idPlanilla/items/existe', async (req: Request, res: Response) => {\n    try {\n        const { idPlanilla } = req.params;\n        const { itemDesc } = req.query; // Cambiamos el nombre a itemDesc\n\n        // Validar que se haya enviado el itemDesc y que sea una cadena\n        if (!itemDesc || typeof itemDesc !== 'string') {\n            return res.status(400).json({ message: 'El parámetro itemDesc es requerido y debe ser una cadena.' });\n        }\n\n        // Buscar la planilla por su ID\n        const planilla = await PlanillaEDModel.findById(idPlanilla).lean();\n        if (!planilla) {\n            return res.status(404).json({ message: 'Planilla no encontrada.' });\n        }\n\n        // Recorrer todas las categorías y sus ítems para ver si alguno coincide con la descripción (comparación insensible a mayúsculas/minúsculas)\n        let exists = false;\n        if (planilla.categorias && Array.isArray(planilla.categorias)) {\n            for (const categoria of planilla.categorias) {\n                if (categoria.items && Array.isArray(categoria.items)) {\n                    const found = categoria.items.some((item: any) => {\n                        // Usamos toLowerCase y trim para comparar de forma más robusta\n                        return item.descripcion && item.descripcion.toLowerCase().trim() === itemDesc.toLowerCase().trim();\n                    });\n                    if (found) {\n                        exists = true;\n                        break;\n                    }\n                }\n            }\n        }\n\n        // Responder indicando si el ítem (por descripción) existe o no en el documento\n        return res.json({ exists });\n    } catch (error) {\n        console.error('Error al verificar existencia del ítem en la planilla:', error);\n        return res.status(500).json({ message: 'Error en el servidor.', error });\n    }\n});\n\n// Ruta para eliminar un ítem de una categoría dentro de un documento específico\nrouter.delete('/eliminar-item', async (req, res) => {\n    try {\n        const { idDocumento, descripcionItem } = req.body;\n\n        // Validar que se hayan enviado ambos parámetros\n        if (!idDocumento || !descripcionItem) {\n            return res.status(400).json({ message: \"Se requieren idDocumento y descripcionItem\" });\n        }\n\n        // Buscar el documento por id y eliminar el ítem de todas las categorías donde aparezca\n        const resultado = await PlanillaEDModel.findOneAndUpdate(\n            { _id: idDocumento },\n            { $pull: { \"categorias.$[].items\": { descripcion: descripcionItem } } },\n            { new: true } // Devuelve el documento actualizado\n        );\n\n        // Si no se encontró el documento\n        if (!resultado) {\n            return res.status(404).json({ message: \"Documento no encontrado\" });\n        }\n\n        // Respuesta exitosa\n        res.json({ message: \"Ítem eliminado correctamente\", resultado });\n\n    } catch (error) {\n        console.error(\"Error al eliminar ítem:\", error);\n        res.status(500).json({ message: \"Error interno del servidor\" });\n    }\n});\n\n\nexport default router;\n","import * as mongoose from 'mongoose';\n// Aquí sólo importas los modelos que realmente necesitas\nimport { ICategoriaItem } from '../../categoriaitems/schemas/categoriaItems';  // No es necesario importar CategoriaItemSchema aquí\nimport { IItem } from '../../Items/schemas/items';  // Deberías importar IItem si lo necesitas\n\nconst Schema = mongoose.Schema;\n\n// Interfaz extendida para incluir categorías e ítems\nexport interface IPlanillaED extends mongoose.Document {\n    fechaCreacion: Date;\n    idEfector: mongoose.Schema.Types.ObjectId;\n    descripcion: string;\n    idServicio: mongoose.Schema.Types.ObjectId;\n    categorias: {\n        descripcion: string;          // Descripción de la categoría\n        categoria: ICategoriaItem;   // Referencia a la categoría\n        items: {\n            _id: string;\n            descripcion: string;      // Descripción del ítem\n            valor: number;            // Valor del ítem\n        }[];                         // Arreglo de ítems dentro de la categoría con descripción y valor\n    }[];\n}\n\n// Esquema de la categoría, ahora incluye la descripción y los ítems con descripción y valor\nconst CategoriaSchema = new Schema({\n    categoria: { type: Schema.Types.ObjectId, ref: 'CategoriaItem', required: true },  // Referencia al modelo CategoriaItem\n    descripcion: { type: String, required: true },  // Descripción de la categoría\n    items: [{\n        _id: { type: Schema.Types.ObjectId, ref: 'Item' },  // Referencia al modelo Item\n        descripcion: { type: String, required: true },      // Descripción del ítem\n        valor: { type: Number, required: true }             // Valor del ítem\n    }]\n});\n\n// Esquema para la planilla, incluyendo las categorías y los ítems con sus descripciones y valores\nconst PlanillaEDSchema = new Schema({\n    fechaCreacion: { type: Date, required: true },\n    descripcion: { type: String, required: true },\n    idEfector: { type: Schema.Types.ObjectId, ref: 'Efectores', required: true },\n    idServicio: { type: Schema.Types.ObjectId, ref: 'Servicios', required: true },\n    categorias: [CategoriaSchema]  // Arreglo de categorías, que contiene ítems con descripciones y valores\n});\n\n// Exportar el modelo de Mongoose para la planilla\nexport const PlanillaEDModel = mongoose.model<IPlanillaED>('PlanillaED', PlanillaEDSchema, 'planillaed');\n","import { Router } from 'express';\nimport { ServicioModel } from '../Schemas/servicios';\nimport { ServicioSchema } from '../Schemas/servicios';\n\n\nconst router = Router();\n\n\nrouter.get('/rmServicios', async (req, res, next) => {\n    try {\n        const data = await ServicioModel.find().sort({ descripcion: 1 }); // 1 para orden ascendente\n\n        res.json(data);\n    } catch (error) {\n        console.error('Error al obtener los items:', error);\n        res.status(500).json({ error: 'Error al obtener los items' });\n    }\n});\n\n\nrouter.get('/rmServicios/:id', async (req, res) => {\n    const id = req.params.id;\n    const respuesta = await ServicioModel.findById(id);\n    res.json(respuesta);\n});\n\n\n\n//alta\n\n\nrouter.post('/rmServicios', async (req, res) => {\n    try {\n        console.log('Solicitud POST recibida en /rmItems:', req.body); // Log de la solicitud recibida\n        const newItems = await ServicioModel.create(req.body);\n        res.json(newItems);\n    } catch (error) {\n        console.error('Error al crear el ítem:', error); // Log del error\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n\n//modificar\n\nrouter.put('/rmServicios/:id', async (req, res) => {\n    try {\n        const nuevaDescripcion = req.body.descripcion;  // Obtener la nueva descripción\n\n        // Verificar si ya existe cualquier categoría con la misma descripción\n        const categoriaExistente = await ServicioModel.findOne({ descripcion: nuevaDescripcion });\n\n        // Si se encuentra una categoría con la misma descripción, devolver un error\n        if (categoriaExistente) {\n            return res.status(400).json({\n                error: 'La descripción ya se encuentra registrada en otro documento.'\n            });\n        }\n\n        // Proceder a la actualización ya que no se encontró ninguna categoría con esa descripción\n        const respuesta = await ServicioModel.findByIdAndUpdate(req.params.id, req.body, { new: true });\n\n        // Si no se encuentra la categoría con el ID proporcionado\n        if (!respuesta) {\n            return res.status(404).json({ error: 'No se encontró la categoría para actualizar.' });\n        }\n\n\n        // Mostrar la respuesta en la consola\n        console.log('Categoría actualizada:', respuesta);\n\n        // Responder con la categoría actualizada\n        res.json(respuesta);\n\n    } catch (error) {\n        // Manejo de errores generales\n        console.error('Error en la actualización:', error);\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n\n\n\n\nrouter.delete('/rsServicios/:id', async (req, res) => {\n    try {\n        const id = req.params.id;\n        const respuesta = await ServicioModel.findByIdAndDelete(id);\n        if (respuesta) {\n            res.json({ message: 'Documento eliminado correctamente' });\n        } else {\n            res.status(404).json({ error: 'Documento no encontrado' });\n        }\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n// thunder   http://localhost:3000/api/rItems/\n\n\n\n\nexport default router;\n\n","import * as mongoose from 'mongoose';\n\nconst Schema = mongoose.Schema;\n\nexport interface IServicio extends mongoose.Document {\n    nombre: string;\n}\n\nconst ServicioSchema = new Schema<IServicio>({\n    nombre: { type: String, required: true }\n});\n\nexport const ServicioModel = mongoose.model<IServicio>('Servicios', ServicioSchema, 'servicios');\n\nexport { ServicioSchema };\n/*\n\nconst schema = new mongoose.Schema({\n    nombre: { type: String },\n\n});\n\nexport const modelo = mongoose.model('servicios', schema, 'servicios');\n*/\n\n","import { Router, NextFunction } from 'express';\nimport { ApiBootstrap } from '@andes/api-tool/build/bootstrap';\nimport { environment } from '../environments/environment';\nimport { apiOptionsMiddleware, Request, Response } from '@andes/api-tool';\n\nconst shiroTrie = require('shiro-trie');\n\nconst info = {\n    name: 'evalauciones-de-personal',\n    version: '1.0.0'\n};\n\nconst port = environment.port;\nconst host = environment.host;\nconst key = environment.key;\n\nexport const application = new ApiBootstrap(info, { port, host, key });\napplication.add(apiOptionsMiddleware as Router);\n\nexport const loadUserMiddleware = async function (req: Request, res: Response, next: NextFunction) {\n    // Esta resuelto así por un tema de circle dependecy.\n    // [TODO] queda pendiente como relacionar el Bootstrap atomatico con el ResourceBase\n\n    const { User } = require('./users/user.schema');\n    const userId = req.user.user_id;\n    const user = await User.findById(userId, {\n        email: 1,\n        nombre: 1,\n        apellido: 1,\n        documento: 1,\n        permisos: 1\n    });\n    if (user) {\n        req.user = user;\n        req.user['usuario'] = {\n            email: user.email,\n            nombre: user.nombre,\n            apellido: user.apellido,\n            documento: user.documento\n        };\n        return next();\n    } else {\n        return next(403);\n    }\n};\n\nexport const authenticate = () => {\n    if (environment.key) {\n        return [application.authenticate(), loadUserMiddleware];\n    } else {\n        // Bypass Auth\n        return (req, res, next) => next();\n    }\n};\n\nexport const checkPermission = (req: Request, permiso: string) => {\n    if (req.user && req.user.permisos) {\n        const shiro = shiroTrie.new();\n        shiro.add(req.user.permisos);\n        return shiro.check(permiso);\n    }\n};\n\nexport const getPermission = (req: Request, permiso: string) => {\n    if (req.user && req.user.permisos) {\n        const shiro = shiroTrie.new();\n        shiro.add(req.user.permisos);\n        return shiro.permissions(permiso);\n    }\n};\n","import { application } from '../application';\nimport { UsersCtr } from '../users/user.controller';\nimport { Request } from '@andes/api-tool';\nimport { sendUserEmail } from '../services/mail/mail';\nimport { sendAdminEmail } from '../services/mail/mail';\nimport { Types } from 'mongoose';\nimport { environment } from '../../environments/environment';\n\nexport const AuthRouter = application.router();\n\nAuthRouter.get('/auth/prueba', async (req: Request, res, next) => {\n    try {\n        return res.send('Primer llamado a la api');\n    } catch (err) {\n        return next(403);\n    }\n});\n\nAuthRouter.post('/auth/login', async (req: Request, res, next) => {\n    try {\n        const email = req.body.email;\n        const password = req.body.password;\n        const users = await UsersCtr.search({ email: email, active: true }, {}, req);\n        if (users.length > 0) {\n            const user = users[0];\n            const match = await user.comparePassword(password);\n            if (match) {\n                const session = new Types.ObjectId();\n                const newToken = await application.sign({\n                    session_id: session.toHexString(),\n                    user_id: user._id.toHexString()\n                });\n                return res.json({ token: newToken });\n            }\n        }\n        return next(403);\n    } catch (err) {\n        return next(403);\n    }\n});\n\nAuthRouter.post('/auth/create', async (req: Request, res, next) => {\n    //   try {\n\n    //       const createdUser = await UsersCtr.create(req.body, req);\n    //       const data = {\n    //           user: createdUser,\n    //           url: `${environment.app_host}/auth/activacion-cuenta/${createdUser.validationToken}`,\n    //           subject: 'Activación de cuenta'\n    //        }\n\n    //       await sendUserEmail(data, 'account-activation');\n\n    //       return res.json({ status: 'ok' });\n    //   } catch (err) {\n    //       return next(403);\n    //   }\n\n});\n\n//AuthRouter.post('/auth/regenerate/:email', async (req: Request, res, next) => {\n//      try {\n//    const email = req.params.email;\n//    const updatedUser = await UsersCtr.setNewToken(email, req);\n\n//    const data = {\n//        user: updatedUser,\n//        url: `${environment.app_host}/auth/regenerate-password/${updatedUser.validationToken}`,\n//        subject: 'Regenerar contraseña'\n//    }\n\n//    await sendUserEmail(data, 'password-reset');\n\n//    return res.json({ status: 'ok' });\n//} catch (err) {\n//   return next(403);\n//}\n//});\n\nAuthRouter.post('/auth/suggestions', application.authenticate(), async (req: Request, res, next) => {\n    try {\n        await sendAdminEmail(req.body);\n        return res.json({ status: 'ok' });\n    } catch (err) {\n        return next(403);\n    }\n});\n\n//AuthRouter.post('/auth/validate/:token', async (req: Request, res, next) => {\n//    try {\n//        const token = req.params.token;\n//        await UsersCtr.validateUser(token, req);\n//        return res.json({ status: 'ok' });\n//    } catch (err) {\n//        return next(403);\n//    }\n//});\n\nAuthRouter.post('/auth/resetPassword', async (req: Request, res, next) => {\n    try {\n        const { password, validationToken } = req.body;\n        const users = await UsersCtr.search({ validationToken: validationToken, active: true }, {}, req);\n        if (users.length > 0) {\n            await UsersCtr.update(users[0].id, { password, validationToken: null }, req);\n            return res.json({ status: 'ok' });\n        } else {\n            return res.json({ status: 404 });\n        }\n    } catch (err) {\n        return next(403);\n    }\n});\n\nAuthRouter.post('/auth/updatePassword', application.authenticate(), async (req: Request, res, next) => {\n    try {\n        const { password, user_id } = req.body;\n        const user = await UsersCtr.findById(user_id, {});\n        if (user) {\n            await UsersCtr.update(user.id, { password }, req);\n            return res.json({ status: 'ok' });\n        } else {\n            return res.json({ status: 404 });\n        }\n    } catch (err) {\n        return next(403);\n    }\n});\n\nAuthRouter.get('/auth/session', application.authenticate(), async (req, res, next) => {\n    try {\n        const user_id = req.user.user_id;\n        const user = await UsersCtr.findById(user_id, { fields: 'nombre apellido telefono email documento permisos active' });\n        res.json(user);\n\n    } catch (err) {\n        return next(403);\n    }\n});\n","import { Router } from 'express';\nimport { CategoriaItemModel as modelo } from '../schemas/categoriaItems';\n\n// import { application } from '../../application';\n\nconst router = Router();\n\n\nrouter.get('/rmCategoriaItems', async (req, res, next) => {\n    try {\n        //  console.log('pepe');\n        const data = await modelo.find().sort({ descripcion: 1 }); // 1 para orden ascendente\n        //  console.log('data dpepe', data);\n        res.json(data);\n    } catch (error) {\n        next(error);\n    }\n});\n/*\nrouter.get('/rmCategoriaItems/:id', async (req, res) => {\n    try {\n        const id = req.params.id;\n        const respuesta = await modelo.findById(id);\n        if (!respuesta) {\n            return res.status(404).json({ error: 'Documento no encontrado' });\n        }\n        res.json(respuesta);\n    } catch (error) {\n        console.error('Error al obtener el documento:', error);\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n*/\n\n\n\n\n\n// Ver si la descripción existe en cualquier categoría\n//router.get('/rmCategoriaItems/verificar-descripcion/:descripcion', async (req, res) => {\n//   const descripcion = req.params.descripcion;\n\n// Buscar una categoría con la misma descripción\n//  const categoria = await modelo.findOne({ descripcion: descripcion });\n\n//if (categoria) {\n//  res.json(false); // La descripción ya existe\n//} else {\n//    res.json(true);  // La descripción es única\n//}\n//});\n//es con console logaion \n\n\n\n//ver este\n\n\nrouter.post('/rCategoriaItems', async (req, res) => {\n    try {\n        const newItems = await modelo.create(req.body);\n        res.json(newItems);\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n})\n\n\n\n//post arrays\nrouter.post('/rCategoriaItems', async (req, res) => {\n    try {\n        // Verificar si     req.body es un array\n        if (Array.isArray(req.body)) {\n            const newItems = await modelo.insertMany(req.body);\n            res.json(newItems);\n        } else {\n            const newItem = await modelo.create(req.body);\n            res.json(newItem);\n        }\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n\n\n\nrouter.put('/rCategoriaItems/:id', async (req, res) => {\n    try {\n        const nuevaDescripcion = req.body.descripcion;  // Obtener la nueva descripción\n\n        // Verificar si ya existe cualquier categoría con la misma descripción\n        const categoriaExistente = await modelo.findOne({ descripcion: nuevaDescripcion });\n\n        // Si se encuentra una categoría con la misma descripción, devolver un error\n        if (categoriaExistente) {\n            return res.status(400).json({\n                error: 'La descripción ya se encuentra registrada en otro documento.'\n            });\n        }\n\n        // Proceder a la actualización ya que no se encontró ninguna categoría con esa descripción\n        const respuesta = await modelo.findByIdAndUpdate(req.params.id, req.body, { new: true });\n\n        // Si no se encuentra la categoría con el ID proporcionado\n        if (!respuesta) {\n            return res.status(404).json({ error: 'No se encontró la categoría para actualizar.' });\n        }\n\n\n        // Mostrar la respuesta en la consola\n        console.log('Categoría actualizada:', respuesta);\n\n        // Responder con la categoría actualizada\n        res.json(respuesta);\n\n    } catch (error) {\n        // Manejo de errores generales\n        console.error('Error en la actualización:', error);\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n\n\n/*\n\n// Ruta PATCH para actualizar parcialmente un documento\nrouter.patch('/rCategoriaItems/:id', async (req, res) => {\n    try {\n        const _id = req.params.id;\n        const actualizacion = req.body;\n        const opciones = { new: true }; // Para devolver el documento actualizado\n        //const respuesta = await modelo.findByIdAndUpdate(id, actualizacion, opciones);\n        const respuesta = await modelo.findByIdAndUpdate(_id, actualizacion, opciones);\n        if (respuesta) {\n            res.json(respuesta);\n        } else {\n            res.status(404).json({ error: 'Documento no encontrado' });\n        }\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n*/\nrouter.delete('/rCategoriaItems/:id', async (req, res) => {\n    try {\n        const id = req.params.id;\n        const respuesta = await modelo.findByIdAndDelete(id);\n        if (respuesta) {\n            res.json({ message: 'Documento eliminado correctamente' });\n        } else {\n            res.status(404).json({ error: 'Documento no encontrado' });\n        }\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n// thunder   http://localhost:3000/api/rCategoriaItems/\nexport default router;\n\n","import * as mongoose from 'mongoose';\n\nconst Schema = mongoose.Schema;\n\n// Definir la interfaz de los ítems\nexport interface IItem extends mongoose.Document {\n    descripcion: string;\n    valor: number;\n}\n\n// Interfaz para CategoriaItem que incluye el arreglo de ítems con descripción y valor\nexport interface ICategoriaItem extends mongoose.Document {\n    descripcion: string;\n    items: IItem[];  // Arreglo de ítems dentro de cada categoría\n}\n\n// Crear el esquema para los ítems (referencia al modelo Item)\nconst CategoriaItemSchema = new Schema<ICategoriaItem>({\n    descripcion: { type: String, required: true },\n    items: [{\n        _id: { type: Schema.Types.ObjectId, ref: 'Item' },  // Referencia al modelo Item\n        descripcion: { type: String, required: true },      // Descripción del ítem\n        valor: { type: Number, required: true }             // Valor del ítem\n    }]\n});\n\n// Crear y exportar el modelo de Mongoose para CategoriaItem\nexport const CategoriaItemModel = mongoose.model<ICategoriaItem>('CategoriaItem', CategoriaItemSchema, 'categoriaitems');\n","import * as mongoose from 'mongoose';\nimport * as debug from 'debug';\n\nimport { environment } from '../environments/environment';\n\nfunction schemaDefaults(schema) {\n    schema.set('toJSON', {\n        virtuals: true,\n        versionKey: false\n    });\n}\n\nexport class Connections {\n    static main: mongoose.Connection;\n\n    /**\n     * Inicializa las conexiones a MongoDB\n     *\n     * @static\n     *\n     * @memberOf Connections\n     */\n    static initialize() {\n        // Configura Mongoose\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (mongoose as any).Promise = global.Promise;\n        mongoose.plugin(schemaDefaults);\n\n        // Configura logger de consultas\n        const queryLogger = debug('mongoose');\n        if (queryLogger.enabled) {\n            mongoose.set('debug', (collection, method, query, arg1, arg2, arg3) =>\n                queryLogger('%s.%s(%o) %s %s', collection, method, query, arg2 || '', arg3 || '')\n            );\n        }\n\n        // Conecta y configura conexiones\n        // 1. PRINCIPAL\n\n        mongoose.connect(environment.mongo_host, {\n            reconnectTries: Number.MAX_VALUE, // Never stop trying to reconnect\n            reconnectInterval: 500\n        });\n\n        this.main = mongoose.connection;\n\n        // Configura eventos\n        this.configEvents('main', this.main);\n    }\n\n    private static configEvents(name: string, connection: mongoose.Connection) {\n        const connectionLog = debug(`mongoose: ${name}`);\n        connection.on('connecting', () => connectionLog('connecting ...'));\n        connection.on('error', error => connectionLog(`error: ${error}`));\n        connection.on('connected', () => connectionLog('connected'));\n        connection.on('reconnected', () => connectionLog('reconnected'));\n        connection.on('disconnected', () => connectionLog('disconnected'));\n    }\n}\n","import { Router } from 'express';\nimport { modelo } from '../schemas/configEvaDesemp';\n// import { application } from '../../application';\n\nconst router = Router();\n\nrouter.get('/rEvaDesemp', async (req, res, next) => {\n\n    const data = await modelo.find();\n    res.json(data);\n    res.send(\"hola\")\n});\n\nrouter.get('/rEvaDesemp/:id', async (req, res) => {\n    const id = req.params.id;\n    const respuesta = await modelo.findById(id);\n    res.json(respuesta);\n});\n\nrouter.post('/rEvaDesemp', async (req, res) => {\n    try {\n        const newItems = await modelo.create(req.body);\n        res.json(newItems);\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n})\n\n\n\n//post arrays\nrouter.post('/rEvaDesemp', async (req, res) => {\n    try {\n        // Verificar si     req.body es un array\n        if (Array.isArray(req.body)) {\n            const newItems = await modelo.insertMany(req.body);\n            res.json(newItems);\n        } else {\n            const newItem = await modelo.create(req.body);\n            res.json(newItem);\n        }\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n// post arrays\n\nrouter.put('/rEvaDesemp/:id', async (req, res) => {\n    try {\n        const id = req.params.id;\n        const respuesta = await modelo.findByIdAndUpdate(id, req.body);\n        res.json(respuesta);\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n// Ruta PATCH para actualizar parcialmente un documento\n\n\n//pach 2\n\nrouter.delete('/rEvaDesemp/:id', async (req, res) => {\n    try {\n        const id = req.params.id;\n        const respuesta = await modelo.findByIdAndDelete(id);\n        if (respuesta) {\n            res.json({ message: 'Documento eliminado correctamente' });\n        } else {\n            res.status(404).json({ error: 'Documento no encontrado' });\n        }\n    } catch (error) {\n        res.status(500).json({ error: 'Ha ocurrido un error' });\n    }\n});\n\n// thunder   http://localhost:3000/api/rEvaDesemp/\n\n\n\n//put modificaar\n//router.post('/items', (req, res) => {\n//    const newItem = req.body; // El nuevo item se espera en el cuerpo de la solicitud\n//    items.pucategoriaitemssh(newItem);\n//    res.status(201).json(newItem); // Responder con el item creado y un código de estado 201\n//});\n\n\nexport default router;\n\n","import * as mongoose from 'mongoose';\n\nconst schema = new mongoose.Schema(\n    {\n\n        descripcion: { type: String },\n        valor: { type: Number },\n        idCategoriaItems: { type: mongoose.Schema.Types.ObjectId }\n    }\n\n);\n\nexport const modelo = mongoose.model('configEvaDesemp', schema, 'edItems');\n//                                   este formulario             tabla o collection\n","import { environment } from '../../../environments/environment';\nimport * as fs from 'fs';\nconst path = require('path');\nconst nodemailer = require('nodemailer');\nconst handlebars = require('handlebars');\n\n\nexport interface MailOptions {\n    from: string;\n    to: string;\n    subject: string;\n    text?: string;\n    html?: any;\n}\n\nexport interface HandlebarsData {\n    titulo: string,\n    usuario: any,\n    url?: string,\n    tipo?: 'sugerencia' | 'pregunta' | 'problema'\n    contenido?: string,\n}\n\nexport async function sendMail(options: MailOptions) {\n    const mailOptions = {\n        from: options.from,\n        to: options.to,\n        subject: options.subject,\n        text: options.text,\n        html: options.html\n    };\n\n    try {\n        const transporter = await nodemailer.createTransport({\n            host: environment.mail.host,\n            port: environment.mail.port,\n            secure: environment.mail.secure,\n            auth: environment.mail.auth\n        });\n\n        return await transporter.sendMail(mailOptions);\n    } catch (err) {\n        return err;\n    }\n}\n\nexport function registerPartialTemplate(name: string) {\n    const filePath = path.join(process.cwd(), `apps/backend/src/app/templates/email/${name}.html`);\n    const file = fs.readFileSync(filePath);\n    handlebars.registerPartial('partial', file.toString());\n}\n\nexport function renderHTML(templateName: string, extras: any) {\n    const TEMPLATE_PATH = 'apps/backend/src/app/templates/email/';\n    const url = path.join(process.cwd(), TEMPLATE_PATH, templateName);\n\n    const html = fs.readFileSync(url, { encoding: 'utf-8' });\n    try {\n        const template = handlebars.compile(html);\n        const htmlToSend = template(extras);\n        return htmlToSend;\n    } catch (exp) {\n        return exp;\n    }\n}\n\n// Emails a usuarios\nexport async function sendUserEmail(data, tipo: 'account-activation' | 'password-reset' | 'user-suggestions') {\n    const handlebarsData: HandlebarsData = {\n        titulo: data.subject,\n        usuario: data.user,\n        url: data.url,\n    };\n\n    // Registra el template parcial de handlebars\n    registerPartialTemplate(tipo);\n\n    const html = await renderHTML('layout.html', handlebarsData);\n\n    const mail: MailOptions = {\n        from: `\"Evalauciones de personal\" <${environment.mail.auth.user}>`,\n        to: handlebarsData.usuario.email,\n        subject: handlebarsData.titulo,\n        html\n    };\n\n    return sendMail(mail);\n}\n\n\n// Emails de sistema\nexport async function sendAdminEmail(body) {\n\n    const handlebarsData: HandlebarsData = {\n        titulo: 'Preguntas y sugerencias',\n        tipo: body.tipo,\n        usuario: body.user,\n        contenido: body.contenido,\n    };\n\n    // Registra el template parcial de handlebars\n    registerPartialTemplate('user-suggestions');\n\n    const html = await renderHTML('layout.html', handlebarsData);\n    const mail: MailOptions = {\n        from: `\"Evalauciones de personal\" <${handlebarsData.usuario.email}>`,\n        to: environment.mail.auth.user,\n        subject: handlebarsData.titulo,\n        html\n    }\n\n    return sendMail(mail);\n};\n","import { Request } from '@andes/api-tool';\nimport { MongoQuery, ResourceBase, ResourceNotFound } from '@andes/core';\nimport { User } from './user.schema';\nimport { authenticate } from '../application';\nimport * as mongoose from 'mongoose';\n\nclass UsersResource extends ResourceBase {\n  Model = User;\n  resourceName = 'users';\n  resourceModule = 'auth';\n  middlewares = [];\n  searchFileds = {\n    apellido: MongoQuery.partialString,\n    nombre: MongoQuery.partialString,\n    documento: MongoQuery.partialString,\n    validationToken: MongoQuery.equalMatch,\n    active: MongoQuery.equalMatch,\n    email: MongoQuery.partialString,\n    search: ['apellido', 'nombre', 'documento', 'email'],\n  };\n\n  //   async validateUser(token: string, req: Request) {\n  //     const users = await this.search({ validationToken: token, active: false }, {}, req);\n  //     if (users.length > 0) {\n  //       const user = users[0];\n  //       const data = { validationToken: null, active: true };\n  //       return await this.update(user._id, data, req);\n  //     }\n  //     throw new ResourceNotFound();\n  //   }\n\n  //   async setNewToken(email: string, req: Request) {\n  //     const users = await this.search({ email, active: true }, {}, req);\n  //     if (users.length > 0) {\n  //       const user = users[0];\n  //       const data = { validationToken: new mongoose.Types.ObjectId().toHexString() };\n  //       return await this.update(user._id, data, req);\n  //     }\n  //   }\n}\n\nexport const UsersCtr = new UsersResource();\n\nexport const UsersRouter = UsersCtr.makeRoutes();\n","import * as mongoose from 'mongoose';\nconst bcrypt = require('bcrypt');\n\n// eslint-disable-next-line no-useless-escape\nconst EMAILRegexp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const UsersSchema = new mongoose.Schema({\n    active: { type: Boolean, default: false },\n    nombre: String,\n    apellido: String,\n    documento: String,\n    email: {\n        type: String,\n        lowercase: true,\n        trim: true,\n        match: EMAILRegexp,\n        index: { unique: true }\n    },\n    telefono: String,\n    password: String,\n    permisos: [String],\n    validationToken: String,\n    disclaimers:\n        [{\n            createdAt: Date,\n            _id: {\n                type: mongoose.Schema.Types.ObjectId,\n                ref: 'dislaimer'\n            }\n        }]\n});\n\nUsersSchema.pre('save', async function (this: any, next) {\n    const SALT_FACTOR = 5;\n\n    if (this.isNew) {\n        this.validationToken = new mongoose.Types.ObjectId().toHexString();\n    }\n\n    if (!this.isModified('password')) {\n        return next();\n    }\n    try {\n        const salt = await bcrypt.genSalt(SALT_FACTOR);\n        const hash = await bcrypt.hash(this.password, salt, null);\n        this.password = hash;\n        return next();\n    } catch (err) {\n        return next(err);\n    }\n});\n\nUsersSchema.methods.comparePassword = async function (passwordAttempt) {\n    return await bcrypt.compare(passwordAttempt, this.password);\n};\n\nexport const User = mongoose.model('users', UsersSchema, 'users');\n","export const environment = {\n    production: false,\n    port: parseInt(process.env.PORT) || 3000,\n    host: process.env.HOST || '0.0.0.0',\n    google_map_key: process.env.GOOGLE_KEY || 'unacalve',\n    app_host: process.env.APP_HOST || '',\n    key: process.env.JWT_KEY || null,\n    mongo_host: process.env.MONGO_HOST || 'mongodb://localhost:27017/evaluaciones-de-personal',\n    logDatabase: {\n        log: {\n            host: process.env.MONGO_LOGS || 'mongodb://localhost:27017/evalauciones-logs',\n            options: {\n                reconnectTries: Number.MAX_VALUE,\n                reconnectInterval: 1500,\n                useNewUrlParser: true\n            }\n        }\n    },\n    mail: {\n        host: 'smtp.gmail.com',\n        port: 587,\n        secure: false,\n        auth: {\n            user: process.env.MAIL_USER || 'mail@mail.gob.ar',\n            pass: process.env.MAIL_PASSWORD || 'somePass'\n        }\n    }\n};\n\nexport const jobs = [\n\n];\n\n\n","//import EdItemsRouter from './app/eDesempeno/routes/configEvaDesemp';\nimport EdItemsRouter from './app/eDesempeno/routes/configEvaDesemp';\nimport EdCategoriaItems from './app/categoriaitems/routes/categoriaItems';\nimport ItemsRouter from './app/Items/routes/items';\nimport EfectorRouter from './app/Efectores/Routes/efectores';\nimport ServiciosRouter from './app/Servicios/Routes/Servicios';\nimport PlanillaEDRouter from './app/PlanillaED/Router/PlanillaED';\n\n\nrequire('dotenv').config();\nconst { Connections } = require('./app/connection');\nconst { application } = require('./app/application');\nConnections.initialize();\n\n// Constantes\nconst UsersRouter = require('./app/users/user.controller').UsersRouter;\nconst AuthRouter = require('./app/auth/auth.routes').AuthRouter;\n\n// Rutas\napplication.add({ path: '/api', router: UsersRouter });\napplication.add({ path: '/api', router: EdItemsRouter })\napplication.add({ path: '/api', router: ItemsRouter })\napplication.add({ path: '/api', router: EfectorRouter })\napplication.add({ path: '/api', router: ServiciosRouter })\napplication.add({ path: '/api', router: PlanillaEDRouter })\n\napplication.add({ path: '/api', router: EdCategoriaItems })\n\napplication.add({ path: '/api', router: AuthRouter });\napplication.router()\napplication.start();","module.exports = require(\"@andes/api-tool\");","module.exports = require(\"@andes/api-tool/build/bootstrap\");","module.exports = require(\"@andes/core\");","module.exports = require(\"bcrypt\");","module.exports = require(\"debug\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"fs\");","module.exports = require(\"handlebars\");","module.exports = require(\"mongoose\");","module.exports = require(\"nodemailer\");","module.exports = require(\"path\");","module.exports = require(\"shiro-trie\");","module.exports = require(\"tslib\");"],"sourceRoot":""}